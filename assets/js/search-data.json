{
  
    
        "post0": {
            "title": "Week 6 Hacks",
            "content": "Week 6 . Issue on Github | . Arrays and Images . Working with 2D arrays in conjunction with image manipulation. Follow guidelines in Hacks. . Go to Arrays and Images Mini Lab | . API Hacks . myStore API | JSON File stored on the site | HTML File used for testing | Data from JSON displayed | . Team Project Approval . Blog Post | Blog Post | Team Issue | Scrumboard | As Backend Developer, I can work on using store APIs to test our website and work on using images to display the different products users want to sell/buy on DN Market Place. | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/10/02/week6Hacks.html",
            "relUrl": "/markdown/2022/10/02/week6Hacks.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fetch of myStore data with RapidAPI",
            "content": "myStore API Item Categories . .",
            "url": "https://mann223.github.io/fastpages/2022/10/01/myStore.html",
            "relUrl": "/2022/10/01/myStore.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Java RapidAPI Hacks - myStore",
            "content": "Fetch and Backend RapidAPI . Below is the json file from the myStore RapidAPI. . import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; //RapidAPI header https://rapidapi.com/iddogino1/api/my-store2/ HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://my-store2.p.rapidapi.com/catalog/categories&quot;)) .header(&quot;x-rapidapi-key&quot;, &quot;c59b416554mshfcef455148b1cd9p158ddejsn959d7b9ce755&quot;) .header(&quot;x-rapidapi-host&quot;, &quot;my-store2.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //RapidAPI Body System.out.println(response.body()); . {&#34;categories&#34;:[{&#34;category&#34;:&#34;&#34;},{&#34;category&#34;:&#34;supplements&#34;},{&#34;category&#34;:&#34;Stationery&#34;},{&#34;category&#34;:&#34;Office Supplies&#34;},{&#34;category&#34;:&#34;Test&#34;},{&#34;category&#34;:&#34;Accessories&#34;},{&#34;category&#34;:&#34;Bike&#34;},{&#34;category&#34;:&#34;nill&#34;},{&#34;category&#34;:null},{&#34;category&#34;:&#34;Wallet&#34;},{&#34;category&#34;:&#34;Watches&#34;},{&#34;category&#34;:&#34;Travel Gear&#34;},{&#34;category&#34;:&#34;Software&#34;},{&#34;category&#34;:&#34;Clothing&#34;},{&#34;category&#34;:&#34;asa&#34;},{&#34;category&#34;:&#34;books&#34;},{&#34;category&#34;:&#34;dsas&#34;},{&#34;category&#34;:&#34;zx&#34;},{&#34;category&#34;:&#34;25&#34;},{&#34;category&#34;:&#34;appliance&#34;},{&#34;category&#34;:&#34;velit elit in&#34;},{&#34;category&#34;:&#34;Furniture&#34;},{&#34;category&#34;:&#34;kategoria&#34;},{&#34;category&#34;:&#34; meble&#34;},{&#34;category&#34;:&#34;hth&#34;},{&#34;category&#34;:&#34;string&#34;},{&#34;category&#34;:&#34;laptop&#34;},{&#34;category&#34;:&#34;Technology&#34;},{&#34;category&#34;:&#34;Baby&#34;},{&#34;category&#34;:&#34;Movies&#34;},{&#34;category&#34;:&#34;Automotive&#34;},{&#34;category&#34;:&#34;Computers&#34;},{&#34;category&#34;:&#34;Music&#34;},{&#34;category&#34;:&#34;Sports&#34;},{&#34;category&#34;:&#34;Beauty&#34;},{&#34;category&#34;:&#34;Health&#34;},{&#34;category&#34;:&#34;Electronics&#34;},{&#34;category&#34;:&#34;Industrial&#34;},{&#34;category&#34;:&#34;Home&#34;},{&#34;category&#34;:&#34;Shoes&#34;},{&#34;category&#34;:&#34;Grocery&#34;},{&#34;category&#34;:&#34;Kids&#34;},{&#34;category&#34;:&#34;Garden&#34;},{&#34;category&#34;:&#34;Toys&#34;},{&#34;category&#34;:&#34;Tools&#34;},{&#34;category&#34;:&#34;Games&#34;},{&#34;category&#34;:&#34;Jewelery&#34;},{&#34;category&#34;:&#34;computer&#34;},{&#34;category&#34;:&#34;Outdoors&#34;},{&#34;category&#34;:&#34;Appliances&#34;},{&#34;category&#34;:&#34;Calsado&#34;},{&#34;category&#34;:&#34;Deportiva&#34;},{&#34;category&#34;:&#34;Moviles&#34;},{&#34;category&#34;:&#34;computers.&#34;},{&#34;category&#34;:&#34;Asado&#34;},{&#34;category&#34;:&#34;Movil&#34;},{&#34;category&#34;:&#34;computeir&#34;},{&#34;category&#34;:&#34; &#34;},{&#34;category&#34;:&#34; cocinca&#34;},{&#34;category&#34;:&#34;shirt&#34;},{&#34;category&#34;:&#34;Snacks&#34;},{&#34;category&#34;:&#34;Computers &#34;},{&#34;category&#34;:&#34;Smart TV&#34;},{&#34;category&#34;:&#34;Bebidas&#34;},{&#34;category&#34;:&#34;Creator Expert&#34;},{&#34;category&#34;:&#34;argentina&#34;},{&#34;category&#34;:&#34;China&#34;},{&#34;category&#34;:&#34;Gaming&#34;},{&#34;category&#34;:&#34;PC&#34;},{&#34;category&#34;:&#34;Tecnologie&#34;},{&#34;category&#34;:&#34;{{category}}&#34;},{&#34;category&#34;:&#34;string1&#34;},{&#34;category&#34;:&#34;COMPUTERS PRUEBA&#34;},{&#34;category&#34;:&#34;SEDAN2&#34;},{&#34;category&#34;:&#34;Electronicos&#34;},{&#34;category&#34;:&#34;SEDAN&#34;},{&#34;category&#34;:&#34;PRUEBA3&#34;},{&#34;category&#34;:&#34;tecnology&#34;},{&#34;category&#34;:&#34;Accesorio&#34;},{&#34;category&#34;:&#34;computappliancesers&#34;},{&#34;category&#34;:&#34;cumputer&#34;},{&#34;category&#34;:&#34;accesorios&#34;},{&#34;category&#34;:&#34;electro&#34;},{&#34;category&#34;:&#34;adsadadsad&#34;},{&#34;category&#34;:&#34;Limpieza&#34;},{&#34;category&#34;:&#34;Celulares&#34;},{&#34;category&#34;:&#34;Juguetes&#34;},{&#34;category&#34;:&#34;calzado&#34;},{&#34;category&#34;:&#34;sombrero&#34;},{&#34;category&#34;:&#34;Laptot&#34;},{&#34;category&#34;:&#34;omputers&#34;},{&#34;category&#34;:&#34;suplements&#34;},{&#34;category&#34;:&#34;Accesories&#34;},{&#34;category&#34;:&#34;X&#34;},{&#34;category&#34;:&#34;leche&#34;},{&#34;category&#34;:&#34;Electrodomesticos&#34;},{&#34;category&#34;:&#34;accesoros&#34;},{&#34;category&#34;:&#34;teste&#34;},{&#34;category&#34;:&#34;Viveres&#34;},{&#34;category&#34;:&#34;videogames&#34;},{&#34;category&#34;:&#34;sport&#34;},{&#34;category&#34;:&#34;iphone&#34;},{&#34;category&#34;:&#34;tecnilogy&#34;},{&#34;category&#34;:&#34;Computadora&#34;},{&#34;category&#34;:&#34;Wiper blade&#34;},{&#34;category&#34;:&#34;Pen&#34;},{&#34;category&#34;:&#34;autos&#34;},{&#34;category&#34;:&#34;Stationary items&#34;},{&#34;category&#34;:&#34;Udemy&#34;},{&#34;category&#34;:&#34;tv&#34;},{&#34;category&#34;:&#34;Audio&#34;},{&#34;category&#34;:&#34;harum&#34;},{&#34;category&#34;:&#34;voluptatem&#34;},{&#34;category&#34;:&#34;maiores&#34;},{&#34;category&#34;:&#34;molestiae&#34;},{&#34;category&#34;:&#34;fugiat&#34;},{&#34;category&#34;:&#34;Electrodomestico&#34;},{&#34;category&#34;:&#34;vitae&#34;},{&#34;category&#34;:&#34;distinctio&#34;},{&#34;category&#34;:&#34;Tecnología&#34;},{&#34;category&#34;:&#34;Automatizacion&#34;},{&#34;category&#34;:&#34;taom&#34;},{&#34;category&#34;:&#34;Laptop dell intel i7 8gb ram&#34;},{&#34;category&#34;:&#34;computadoras&#34;},{&#34;category&#34;:&#34;TV de alta calidad&#34;},{&#34;category&#34;:&#34;products&#34;},{&#34;category&#34;:&#34;Categoria 1&#34;},{&#34;category&#34;:&#34;CarnePre&#34;},{&#34;category&#34;:&#34;perro&#34;},{&#34;category&#34;:&#34;mi_category&#34;},{&#34;category&#34;:&#34;Frituras&#34;},{&#34;category&#34;:&#34;telefono&#34;},{&#34;category&#34;:&#34;proteina&#34;},{&#34;category&#34;:&#34;refresco&#34;},{&#34;category&#34;:&#34;Juguete&#34;},{&#34;category&#34;:&#34;papeleria&#34;},{&#34;category&#34;:&#34;Alimentos&#34;},{&#34;category&#34;:&#34;console&#34;},{&#34;category&#34;:&#34;hombres&#34;},{&#34;category&#34;:&#34;Verduras&#34;},{&#34;category&#34;:&#34;karateDSL&#34;},{&#34;category&#34;:&#34;dolore&#34;},{&#34;category&#34;:&#34;Verduras_pichincha&#34;},{&#34;category&#34;:&#34;cars&#34;},{&#34;category&#34;:&#34;clothes&#34;},{&#34;category&#34;:&#34;comida&#34;},{&#34;category&#34;:&#34;hogar&#34;},{&#34;category&#34;:&#34;Venta&#34;},{&#34;category&#34;:&#34;Baja676&#34;},{&#34;category&#34;:&#34;Abc&#34;},{&#34;category&#34;:&#34; Accessories&#34;},{&#34;category&#34;:&#34;&lt;category&gt;&#34;},{&#34;category&#34;:&#34;insumo&#34;},{&#34;category&#34;:&#34;zapatos&#34;},{&#34;category&#34;:&#34;&lt;categoria&gt;&#34;},{&#34;category&#34;:&#34;Categoria1&#34;},{&#34;category&#34;:&#34;ROCA&#34;},{&#34;category&#34;:&#34;Categoria 2&#34;},{&#34;category&#34;:&#34;Tomates_pichincha&#34;},{&#34;category&#34;:&#34;Pruebas&#34;},{&#34;category&#34;:&#34;cocina&#34;},{&#34;category&#34;:&#34;ropa&#34;},{&#34;category&#34;:&#34;perrito&#34;},{&#34;category&#34;:&#34;deportes&#34;},{&#34;category&#34;:&#34;manifestaciones&#34;},{&#34;category&#34;:&#34;tacones&#34;},{&#34;category&#34;:&#34;Prueba&#34;},{&#34;category&#34;:&#34;shirts&#34;},{&#34;category&#34;:&#34;tecnlogia&#34;},{&#34;category&#34;:&#34;insumo para el hogar&#34;},{&#34;category&#34;:&#34;Apliances&#34;},{&#34;category&#34;:&#34;ELectronica&#34;},{&#34;category&#34;:&#34;phone&#34;},{&#34;category&#34;:&#34;Sistemas&#34;},{&#34;category&#34;:&#34;Electric guitar&#34;},{&#34;category&#34;:&#34;a&#34;},{&#34;category&#34;:&#34;RPOA&#34;},{&#34;category&#34;:&#34;Applianes&#34;},{&#34;category&#34;:&#34;Bike2&#34;},{&#34;category&#34;:&#34;zapatillas&#34;},{&#34;category&#34;:&#34;xxx&#34;},{&#34;category&#34;:&#34;Person&#34;},{&#34;category&#34;:&#34;Electro2&#34;},{&#34;category&#34;:&#34; Juego&#34;},{&#34;category&#34;:&#34;hombre&#34;},{&#34;category&#34;:&#34;49 pulgadas&#34;},{&#34;category&#34;:&#34;Telefono Movil&#34;},{&#34;category&#34;:&#34;Telefono Movil 2T&#34;},{&#34;category&#34;:&#34;Movil 2T&#34;},{&#34;category&#34;:&#34;categoria&#34;},{&#34;category&#34;:&#34;Sex&#34;},{&#34;category&#34;:&#34;gff&#34;},{&#34;category&#34;:&#34;Cel&#34;},{&#34;category&#34;:&#34;action figures&#34;},{&#34;category&#34;:&#34;Informatica&#34;},{&#34;category&#34;:&#34;Casa&#34;},{&#34;category&#34;:&#34;Vehicles&#34;},{&#34;category&#34;:&#34;Televisores&#34;},{&#34;category&#34;:&#34;comúters&#34;},{&#34;category&#34;:&#34;ppa&#34;},{&#34;category&#34;:&#34;consolas&#34;},{&#34;category&#34;:&#34;COMPUTADOR&#34;},{&#34;category&#34;:&#34;Televisor&#34;},{&#34;category&#34;:&#34;Running&#34;},{&#34;category&#34;:&#34;IT&#34;},{&#34;category&#34;:&#34;automovil&#34;},{&#34;category&#34;:&#34;Videojuegos&#34;},{&#34;category&#34;:&#34;Consola&#34;},{&#34;category&#34;:&#34;lindo&#34;},{&#34;category&#34;:&#34;CellPhones&#34;},{&#34;category&#34;:&#34;Streamer&#34;},{&#34;category&#34;:&#34;lacteo&#34;},{&#34;category&#34;:&#34;string123&#34;},{&#34;category&#34;:&#34;cursos&#34;},{&#34;category&#34;:&#34;pasta&#34;},{&#34;category&#34;:&#34;Pie&#34;},{&#34;category&#34;:&#34;Value Meal 1&#34;},{&#34;category&#34;:&#34;Value Meal 2&#34;},{&#34;category&#34;:&#34;Value Meal 3&#34;},{&#34;category&#34;:&#34;Food&#34;},{&#34;category&#34;:&#34;App&#34;},{&#34;category&#34;:&#34;Smartphones&#34;},{&#34;category&#34;:&#34;Ancient Technology&#34;},{&#34;category&#34;:&#34;Appliences&#34;},{&#34;category&#34;:&#34;Mobile Phone&#34;},{&#34;category&#34;:&#34;c1&#34;},{&#34;category&#34;:&#34;Dawa&#34;},{&#34;category&#34;:&#34;sdfsfd&#34;},{&#34;category&#34;:&#34;N/A&#34;},{&#34;category&#34;:&#34;NA&#34;},{&#34;category&#34;:&#34;AntiAge&#34;},{&#34;category&#34;:&#34;ciencia&#34;},{&#34;category&#34;:&#34;terror&#34;},{&#34;category&#34;:&#34;cupidatat pariatur laborum occaecat&#34;},{&#34;category&#34;:&#34;informatico&#34;},{&#34;category&#34;:&#34;2&#34;},{&#34;category&#34;:&#34;09&#34;},{&#34;category&#34;:&#34;category_test&#34;},{&#34;category&#34;:&#34;{{$randomDepartment}}&#34;},{&#34;category&#34;:&#34;asd&#34;},{&#34;category&#34;:&#34;Cmoputación&#34;},{&#34;category&#34;:&#34;jabon&#34;},{&#34;category&#34;:&#34;Ripley&#34;},{&#34;category&#34;:&#34;Toyota&#34;},{&#34;category&#34;:&#34;APPLE&#34;},{&#34;category&#34;:&#34;card&#34;},{&#34;category&#34;:&#34;Mobiles&#34;},{&#34;category&#34;:&#34;abrigos&#34;},{&#34;category&#34;:&#34;alimentos organicos&#34;},{&#34;category&#34;:&#34;minim nisi commodo laborum&#34;},{&#34;category&#34;:&#34;camaras&#34;},{&#34;category&#34;:&#34;TShirt&#34;},{&#34;category&#34;:&#34;adult&#34;},{&#34;category&#34;:&#34;TEJIDO&#34;},{&#34;category&#34;:&#34;Bazzar&#34;},{&#34;category&#34;:&#34;video juegos&#34;},{&#34;category&#34;:&#34;capunters&#34;},{&#34;category&#34;:&#34;Colombia&#34;},{&#34;category&#34;:&#34;Appilances&#34;},{&#34;category&#34;:&#34;Armadura&#34;},{&#34;category&#34;:&#34;Mouse&#34;},{&#34;category&#34;:&#34;Arma blanca&#34;},{&#34;category&#34;:&#34;TRANSPORTE&#34;},{&#34;category&#34;:&#34;ARTESANIA&#34;},{&#34;category&#34;:&#34;ROPAS&#34;},{&#34;category&#34;:&#34;cosmos&#34;},{&#34;category&#34;:&#34;tech&#34;},{&#34;category&#34;:&#34;Celular&#34;},{&#34;category&#34;:&#34;rico&#34;},{&#34;category&#34;:&#34;hola&#34;},{&#34;category&#34;:&#34;fotomoso&#34;},{&#34;category&#34;:&#34;congas&#34;},{&#34;category&#34;:&#34;reprehenderit consectetur nostrud in&#34;},{&#34;category&#34;:&#34;spc&#34;},{&#34;category&#34;:&#34;smart&#34;},{&#34;category&#34;:&#34;fruta&#34;},{&#34;category&#34;:&#34;notebook&#34;},{&#34;category&#34;:&#34;succesfull&#34;},{&#34;category&#34;:&#34;Tinta&#34;},{&#34;category&#34;:&#34;Hardware&#34;},{&#34;category&#34;:&#34;MONITOR&#34;},{&#34;category&#34;:&#34;ullamco Excepteur aliqua&#34;},{&#34;category&#34;:&#34;Interior&#34;},{&#34;category&#34;:&#34;Animalitos&#34;},{&#34;category&#34;:&#34;Animales&#34;},{&#34;category&#34;:&#34;animal&#34;},{&#34;category&#34;:&#34;comida rapida&#34;},{&#34;category&#34;:&#34;postres helados&#34;},{&#34;category&#34;:&#34;perritos&#34;},{&#34;category&#34;:&#34;Smart Man&#34;},{&#34;category&#34;:&#34;portatiles&#34;},{&#34;category&#34;:&#34;chocolates&#34;},{&#34;category&#34;:&#34;cookies&#34;},{&#34;category&#34;:&#34;coputers&#34;},{&#34;category&#34;:&#34;Category&#34;},{&#34;category&#34;:&#34;laptos&#34;},{&#34;category&#34;:&#34;Lenovo&#34;}]} . Questions . Benefit of using and API? APIs allow different applications to communicate | Able to access and use data | . | Benefit(s) of backend implementation? can use data from other applications for own projects including our team project in AP CSA | . | package com.nighthawk.spring_java_project.mvc.store; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.util.Date; import java.util.HashMap; import org.json.simple.JSONObject; import org.json.simple.parser.JSONParser; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.*; @RestController // annotation to create a RESTful web services @RequestMapping(&quot;/api/store&quot;) //prefix of API public class CovidApiController { private JSONObject body; //last run result private HttpStatus status; //last run status String last_run = null; //last run day of month // GET Covid 19 Stats @GetMapping(&quot;/categories&quot;) //added to end of prefix as endpoint public ResponseEntity&lt;JSONObject&gt; getStore() { //calls API once a day, sets body and status properties String today = new Date().toString().substring(0,10); if (last_run == null || !today.equals(last_run)) { try { //APIs can fail (ie Internet or Service down) //RapidAPI header HttpRequest request = HttpRequest.newBuilder() .uri(URI.create(&quot;https://my-store2.p.rapidapi.com/catalog/products&quot;)) .header(&quot;x-rapidapi-key&quot;, &quot;c59b416554mshfcef455148b1cd9p158ddejsn959d7b9ce755&quot;) .header(&quot;x-rapidapi-host&quot;, &quot;my-store2.p.rapidapi.com&quot;) .method(&quot;GET&quot;, HttpRequest.BodyPublishers.noBody()) .build(); //RapidAPI request and response HttpResponse&lt;String&gt; response = HttpClient.newHttpClient().send(request, HttpResponse.BodyHandlers.ofString()); //JSONParser extracts text body and parses to JSONObject this.body = (JSONObject) new JSONParser().parse(response.body()); this.status = HttpStatus.OK; //200 success this.last_run = today; } catch (Exception e) { //capture failure info HashMap&lt;String, String&gt; status = new HashMap&lt;&gt;(); status.put(&quot;status&quot;, &quot;RapidApi failure: &quot; + e); //Setup object for error this.body = (JSONObject) status; this.status = HttpStatus.INTERNAL_SERVER_ERROR; //500 error this.last_run = null; } } //return JSONObject in RESTful style return new ResponseEntity&lt;&gt;(body, status); } } . | package com.nighthawk.spring_java_project.mvc.store; illegal start of expression .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/10/01/apiHacks.html",
            "relUrl": "/jupyter/2022/10/01/apiHacks.html",
            "date": " • Oct 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Arrays and Images",
            "content": "Saving PNG to GIF . Image IO read and Image IO write are focus of this code. A key portion of working with Images, or any file, is to know location of the input and output directories. . import javax.imageio.ImageIO; import java.io.File; import java.io.IOException; import java.awt.image.BufferedImage; public class ImageIOTest { public static void main( String[] args ){ BufferedImage img = null; // buffer type try { // Name of file and directories String name = &quot;MonaLisa&quot;; String in = &quot;images/&quot;; String out = &quot;images/tmp/&quot;; // Either use URL or File for reading image using ImageIO File imageFile = new File(in + name + &quot;.png&quot;); img = ImageIO.read(imageFile); // set buffer of image data // ImageIO Image write to gif in Java // Documentation https://docs.oracle.com/javase/tutorial/2d/images/index.html ImageIO.write(img, &quot;gif&quot;, new File(out + name + &quot;.gif&quot;) ); // write buffer to gif } catch (IOException e) { e.printStackTrace(); } System.out.println(&quot;Success&quot;); } } ImageIOTest.main(null); . Success . Image Scaling and ASCII Conversion . In this example we print out a row of text for each row in the image. However, it seems as if the image is too tall. To address this problem, try to output a single character per block of pixels. In particular, average the grayscale values in a rectangular block that’s twice as tall as it is wide, and print out a single character for this block. . Hacks . Continue to work with Classes, Arrays, and 2D arrays. FYI, you may need to make a directory /tmp under notebook images. . Look at comments above and see if there is better conversions for ASCII to reduce elongation and distortion. | Try to convert images into Grey Scale, Red Scale, Blue Scale, and Green Scale. | ASCII Conversion Fix Elongation . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToAscii() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } //make height twice the width for (int i = 0; i &lt; (img.getHeight()); i+=2) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col .getGreen() * 0.11))); try { asciiPrt.print(asciiChar(pixVal)); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); monaLisa.printStats(&quot;Original&quot;); monaLisa.resize(33); monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToAscii(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); pumpkin.printStats(&quot;Original&quot;); pumpkin.resize(33); pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToAscii(); } } Pics.main(null); . Original: 499298 389x413 images/MonaLisa.png Scaled: 55625 128x136 images/tmp/MonaLisa.png Original: 39392 302x265 images/pumpkin.png Scaled: 10497 100x87 images/tmp/pumpkin.png . Original ASCII . . . Scaled ASCII . . . Convert Images to Greyscale . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String greyFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.greyFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToGrey() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.asciiFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } //read image // File f = null; // File g = null; // try{ // f = new File(this.); // img = ImageIO.read(f); // }catch(IOException e){ // System.out.println(e); // } // try{ // g = new File(&quot;images/tmp/pumpkin.png&quot;); // img = ImageIO.read(g); // }catch(IOException e){ // System.out.println(e); // } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col // .getGreen() * 0.11))); int r = (int) (col.getRed() * 0.299); int g = (int) (col.getGreen() * 0.587); int b = (int) (col.getBlue() * 0.114); Color greyScale = new Color( r + g + b, r + g + b, r + g + b); img.setRGB(j, i, greyScale.getRGB()); // try { // asciiPrt.print(asciiChar(greyScale)); // asciiPrt.flush(); // asciiWrt.flush(); // } catch (Exception ex) { // } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.greyFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToGrey(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToGrey(); } } Pics.main(null); . Grey Scale Images . . . Convert Image to Red Scale . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String redFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.redFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToRed() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.redFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } //read image // File f = null; // File g = null; // try{ // f = new File(this.); // img = ImageIO.read(f); // }catch(IOException e){ // System.out.println(e); // } // try{ // g = new File(&quot;images/tmp/pumpkin.png&quot;); // img = ImageIO.read(g); // }catch(IOException e){ // System.out.println(e); // } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col // .getGreen() * 0.11))); int r = (int) (col.getRed() * 0.3); // int g = (int) (col.getGreen() * 0.25); // int b = (int) (col.getBlue() * 0.25); Color redScale = new Color( r, 0, 0); img.setRGB(j, i, redScale.getRGB()); // try { // asciiPrt.print(asciiChar(greyScale)); // asciiPrt.flush(); // asciiWrt.flush(); // } catch (Exception ex) { // } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.redFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToRed(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToRed(); } } Pics.main(null); . Red Scale Images . . . Convert Image to Blue Scale . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String redFile; private String blueFile; private String greenFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.redFile = this.outDir + name + &quot;.png&quot;; this.blueFile = this.outDir + name + &quot;.png&quot;; this.greenFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToBlue() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.blueFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } //read image // File f = null; // File g = null; // try{ // f = new File(this.); // img = ImageIO.read(f); // }catch(IOException e){ // System.out.println(e); // } // try{ // g = new File(&quot;images/tmp/pumpkin.png&quot;); // img = ImageIO.read(g); // }catch(IOException e){ // System.out.println(e); // } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col // .getGreen() * 0.11))); //int r = (int) (col.getRed() * 0.3); //int g = (int) (col.getGreen() * 0.25); int b = (int) (col.getBlue() * 0.7); Color blueScale = new Color( 0, 0, b); img.setRGB(j, i, blueScale.getRGB()); // try { // asciiPrt.print(asciiChar(greyScale)); // asciiPrt.flush(); // asciiWrt.flush(); // } catch (Exception ex) { // } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.blueFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToBlue(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToBlue(); } } Pics.main(null); . Blue Scale Images . . . Convert Image to Green Scale . import java.awt.Color; import java.awt.image.BufferedImage; import java.awt.Image; import java.awt.Graphics2D; import java.io.File; import java.io.FileWriter; import java.io.IOException; import java.io.PrintWriter; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import javax.imageio.stream.ImageOutputStream; import javax.imageio.stream.ImageInputStream; import javax.imageio.metadata.IIOMetadata; import javax.imageio.IIOImage; import javax.imageio.ImageIO; import javax.imageio.ImageWriteParam; import javax.imageio.ImageWriter; import javax.imageio.ImageReader; import javax.imageio.ImageTypeSpecifier; public class Pics { private final String inDir = &quot;images/&quot;; // location of images private final String outDir = &quot;images/tmp/&quot;; // location of created files private String inFile; private String resizedFile; private String asciiFile; private String redFile; private String blueFile; private String greenFile; private String ext; // extension of file private long bytes; private int width; private int height; // Constructor obtains attributes of picture public Pics(String name, String ext) { this.ext = ext; this.inFile = this.inDir + name + &quot;.&quot; + ext; this.resizedFile = this.outDir + name + &quot;.&quot; + ext; this.asciiFile = this.outDir + name + &quot;.txt&quot;; this.redFile = this.outDir + name + &quot;.png&quot;; this.blueFile = this.outDir + name + &quot;.png&quot;; this.greenFile = this.outDir + name + &quot;.png&quot;; this.setStats(); } // An image contains metadata, namely size, width, and height public void setStats() { BufferedImage img; try { Path path = Paths.get(this.inFile); this.bytes = Files.size(path); img = ImageIO.read(new File(this.inFile)); this.width = img.getWidth(); this.height = img.getHeight(); } catch (IOException e) { } } // Console print of data public void printStats(String msg) { System.out.println(msg + &quot;: &quot; + this.bytes + &quot; &quot; + this.width + &quot;x&quot; + this.height + &quot; &quot; + this.inFile); } // Convert scaled image into buffered image public static BufferedImage convertToBufferedImage(Image img) { // Create a buffered image with transparency BufferedImage bi = new BufferedImage( img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB); // magic? Graphics2D graphics2D = bi.createGraphics(); graphics2D.drawImage(img, 0, 0, null); graphics2D.dispose(); return bi; } // Scale or reduce to &quot;scale&quot; percentage provided public void resize(int scale) { BufferedImage img = null; Image resizedImg = null; int width = (int) (this.width * (scale/100.0) + 0.5); int height = (int) (this.height * (scale/100.0) + 0.5); try { // read an image to BufferedImage for processing img = ImageIO.read(new File(this.inFile)); // set buffer of image data // create a new BufferedImage for drawing resizedImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH); } catch (IOException e) { return; } try { ImageIO.write(convertToBufferedImage(resizedImg), this.ext, new File(resizedFile)); } catch (IOException e) { return; } this.inFile = this.resizedFile; // use scaled file vs original file in Class this.setStats(); } // convert every pixel to an ascii character (ratio does not seem correct) public void convertToGreen() { BufferedImage img = null; PrintWriter asciiPrt = null; FileWriter asciiWrt = null; try { File file = new File(this.greenFile); Files.deleteIfExists(file.toPath()); } catch (IOException e) { System.out.println(&quot;Delete File error: &quot; + e); } //read image // File f = null; // File g = null; // try{ // f = new File(this.); // img = ImageIO.read(f); // }catch(IOException e){ // System.out.println(e); // } // try{ // g = new File(&quot;images/tmp/pumpkin.png&quot;); // img = ImageIO.read(g); // }catch(IOException e){ // System.out.println(e); // } try { asciiPrt = new PrintWriter(asciiWrt = new FileWriter(this.asciiFile, true)); } catch (IOException e) { System.out.println(&quot;ASCII out file create error: &quot; + e); } try { img = ImageIO.read(new File(this.inFile)); } catch (IOException e) { } for (int i = 0; i &lt; img.getHeight(); i++) { for (int j = 0; j &lt; img.getWidth(); j++) { Color col = new Color(img.getRGB(j, i)); // double pixVal = (((col.getRed() * 0.30) + (col.getBlue() * 0.59) + (col // .getGreen() * 0.11))); //int r = (int) (col.getRed() * 0.3); int g = (int) (col.getGreen() * 0.3); //int b = (int) (col.getBlue() * 0.7); Color greenScale = new Color( 0, g, 0); img.setRGB(j, i, greenScale.getRGB()); // try { // asciiPrt.print(asciiChar(greyScale)); // asciiPrt.flush(); // asciiWrt.flush(); // } catch (Exception ex) { // } } try { asciiPrt.println(&quot;&quot;); asciiPrt.flush(); asciiWrt.flush(); } catch (Exception ex) { } } //write image try{ File file = new File(this.greenFile); ImageIO.write(img, &quot;png&quot;, file); }catch(IOException e){ System.out.println(e); } } // conversion table, there may be better out there ie https://www.billmongan.com/Ursinus-CS173-Fall2020/Labs/ASCIIArt public String asciiChar(double g) { String str = &quot; &quot;; if (g &gt;= 240) { str = &quot; &quot;; } else if (g &gt;= 210) { str = &quot;.&quot;; } else if (g &gt;= 190) { str = &quot;*&quot;; } else if (g &gt;= 170) { str = &quot;+&quot;; } else if (g &gt;= 120) { str = &quot;^&quot;; } else if (g &gt;= 110) { str = &quot;&amp;&quot;; } else if (g &gt;= 80) { str = &quot;8&quot;; } else if (g &gt;= 60) { str = &quot;#&quot;; } else { str = &quot;@&quot;; } return str; } // tester/driver public static void main(String[] args) throws IOException { Pics monaLisa = new Pics(&quot;MonaLisa&quot;, &quot;png&quot;); // monaLisa.printStats(&quot;Original&quot;); // monaLisa.resize(33); // monaLisa.printStats(&quot;Scaled&quot;); monaLisa.convertToGreen(); Pics pumpkin = new Pics(&quot;pumpkin&quot;, &quot;png&quot;); // pumpkin.printStats(&quot;Original&quot;); // pumpkin.resize(33); // pumpkin.printStats(&quot;Scaled&quot;); pumpkin.convertToGreen(); } } Pics.main(null); . Green Scale Images . . .",
            "url": "https://mann223.github.io/fastpages/unit/6",
            "relUrl": "/unit/6",
            "date": " • Sep 26, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Week 5 Hacks",
            "content": "Week 5 . Issue on Github | . Fibonacci Mini Lab . Concept Notes (abstract classes and methods, this vs super, recursion), Fibonacci three ways (for, while, recursion) using an abstract class | Go to Mini Lab | . JavaScript Hacks . Frontend Prototype Search Bar for Team Project | . | Data Javascript Data Hacks | . | . Program Design . Program Design Hacks | Figma Basic Prototype | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/25/week5Hacks.html",
            "relUrl": "/markdown/2022/09/25/week5Hacks.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Week 5 Program Design Hacks",
            "content": "Program Design Hacks . Brain Write. The process of just elaborating on ideas and sharing them with your team. . AP Lit (Redesign Dr. Hall’s Canvas Page) | DN Reads (Similar to good reads but more Del Norte specific) | Stats data collection (Tool for AP Stats students to use for data collection) | Del Norte Market (Idea we chose, place where Del Norte Students can buy/sell school related items such as AP Prepbooks and old calculators) | . Wire Frame, Concept. Before coding start to outline what the project will look like. Modeling or UML. Behavior, Interaction, Data diagrams . Figma Basic Prototype for DN Market | DN Market Place Site Workflow Diagram . | Basic Outline Home Screen Top Menu | Search Bar | . | About Us Page | Able to add listing with product/seller info | View available items based on categories | . | . Additionally, some development of Concepts can/should occur. This should be focused on frontend or backend concepts. . Frontend. Wire Frame development is better than coding, at early stages. But if you have clear idea and can articulate it in HTML or CSS it is OK to work there as well. . Frontend DN Market Search Bar Prototype | . Backend. Jupyter notebooks is a great way to thing about data and outputs. Often a console program can help you imagine data as well as interaction. . Javascript Hacks that include About Us/DN Market Data Prototype | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/25/programDesignHacks.html",
            "relUrl": "/markdown/2022/09/25/programDesignHacks.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Javascript Hacks",
            "content": "JavaScript references . JavaScript is the most important language you need to learn as a frontend developer. It&#39;s a great first language for web developers to learn. . W3Schools - reference | feecodecamp.org - pbl . | javascript30.com - pbl . | . console.log output . Output to console using the classic programming introduction using a &quot;Hello, World!&quot; message. . The command or function is console.log() | &quot;Hello, World&quot; is a String literal. This is the referred to as Static text, as it does not change. | &quot;Hello, World&quot; is a parameter to the console.log command. | The console.log command outputs the parameter to the console, so you can see it in this Jupyter document. | Note, in a Web Application, console.log is used for debugging and is not visible from the browser via HTML. It is used behind the scenes, when using Inspect-&gt;Console from the browser. | . console.log(&quot;Hello, World!&quot;); . Hello, World! . console.log output showing use of variable . This second example is a sequence of code, two or more lines forms a sequence. This example defines a variable, then outputs the msg to terminal. . The variable &quot;var msg =&quot; is used to capture the data | The console.log(msg) outputs to console | . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . console.log output showing use of a function . This example passes the previously defined variable &quot;msg&quot; to the newly defined &quot;function logIt(output)&quot;. . There are two steps in the code, the definition of the function and the call to the function. &quot;function logIt(output) {}&quot; and everything between curly braces is the definitions of the function. | &quot;logIt(msg)&quot; is the call to the function, this actually activates the function. If you remove this line you will not receive any output to console. | . | Since the variable &quot;msg&quot; was defined in previous cell, it is used a parameter when calling the logMessage function. | . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . Showing reuse of a function . Now that a function is defined, it can be called from any of the subsequent cell in the Jupyter notebook. A function/method, is a process of creating a procedural abstraction. This a programming practice to promote reuse versus coding the same thing over and over. . First call sends a different string message | Second call sends a number | . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . Dynamic or Loosely typed language (string, number) . JavaScript is a loosely typed language, meaning you don&#39;t have to specify what type of information will be stored in a variable in advance. The variable type is determined at runtime. This is similar to Python and most interpretive languages. Java which is a compiled language is strongly typed, thus you will see string, integer, double, and object in the source code. In JavaScript, the &quot;typeof&quot; keyword returns the type. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType([1, 2, 3]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 object ; [ 1, 2, 3 ] . Build a Person Function/Class object and JSON . JavaScript functions have special properties and syntax is shown in many ways. In fact, a Class in JavaScript is a special function. Jupyter Notebooks seems to be more friendly to &quot;function&quot; definitions versus &quot;Class&quot;, thus this lesson uses &quot;function&quot; and &quot;prototype&quot; versus &quot;Class&quot;. . Definition of function allows for a collection of data, the &quot;function Person&quot; allows programmer to retain name, github id, and class of designation. | Definition of a prototype allow for the definition of a method associated with the function , the &quot;Person.prototype.toJSON&quot; allows the collection of data to be expressed in a json/string versus JavaScript object. | Instance of a function, the &quot;var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977)&quot; line makes a variable &quot;teacher&quot; which is an object representation of &quot;function Person&quot;. | . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Build a Classroom Array/List of Persons and JSON . Many key elements are shown again. New elements include... . Building an Array, &quot;var students&quot; is an array of many persons | Building a Classroom, this show forEach iteration through an array and .push adding to an array. These are key concepts in all programming languages. | . // define a student Array of Person(s) var students = [ new Person(&quot;Anthony&quot;, &quot;tonyhieu&quot;, 2022), new Person(&quot;Bria&quot;, &quot;B-G101&quot;, 2023), new Person(&quot;Allie&quot;, &quot;xiaoa0&quot;, 2023), new Person(&quot;Tigran&quot;, &quot;Tigran7&quot;, 2023), new Person(&quot;Rebecca&quot;, &quot;Rebecca-123&quot;, 2023) ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Anthony&#39;, ghID: &#39;tonyhieu&#39;, classOf: 2022, role: &#39;Student&#39; }, Person { name: &#39;Bria&#39;, ghID: &#39;B-G101&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Allie&#39;, ghID: &#39;xiaoa0&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Tigran&#39;, ghID: &#39;Tigran7&#39;, classOf: 2023, role: &#39;Student&#39; }, Person { name: &#39;Rebecca&#39;, ghID: &#39;Rebecca-123&#39;, classOf: 2023, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter $$.html which renders output similarly to a real website. . JavaScript in the _toHTML method is broken into three parts... Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each index in the Array. | Return part create the HTML fragment for rendering | . | The last line in the example $$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render | . Reference . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row in compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Anthony | tonyhieu | 2022 | Student | Bria | B-G101 | 2023 | Student | Allie | xiaoa0 | 2023 | Student | Tigran | Tigran7 | 2023 | Student | Rebecca | Rebecca-123 | 2023 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; Timer . There are ways to setup a delay. . Reference . $$.async(); console.log(&quot;Hello, World!&quot;); var action = { $$: $$, console: console, }; setTimeout(function() { $$.clear(0); // clear output cell action.$$.sendResult(&quot;Goodbye!&quot;); }, 2000); // 2 second timer . &#39;Goodbye!&#39; . Hacks . Objective of JavaScript is to produce frontend code. Working in Jupyter Notebooks could help in the process of visualizing design with short and interactive feedback. However, my hope is that you move to Fastpages and play with Frontend code in that environment and do the REAL thing. Here is my suggestion. . Design UI screens that are prototypes for your project. Design at least one screen with data from a structure (like Person data above), that is used to dynamically create HTML. As an alternative to HTML text method above, look at Jokes post and usage createElement... . About Us DN Market Place Prototype . // define a function to hold data for a Person console.log(&quot;DN Market Place About Us Page Prototype&quot;); function Person(name,role) { this.name = name; this.role = role; } // define a setter for role in Person data // Person.prototype.setRole = function(role) { // this.role = role; // } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;Teacher&quot;); // object type is easy to work with in JavaScript // logItType(teacher); // before role // logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // // output of Object and JSON/string associated with Teacher // //teacher.setRole(&quot;Teacher&quot;); // set the role // logItType(teacher); // logItType(teacher.toJSON()); // define a student Array of Person(s) var students = [ new Person(&quot;Pranavi&quot;, &quot;Scrum Master&quot;), new Person(&quot;Meena&quot;, &quot;Backend Developer&quot;), new Person(&quot;Madhumita&quot;, &quot;Frontend Developer&quot;), new Person(&quot;Shraddha&quot;, &quot;DevOps Manager&quot;), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher //teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // // output of Objects and JSON in CompSci classroom // logItType(compsci.classroom); // constructed classroom object // logItType(compsci.classroom[0].name); // abstract 1st objects name // logItType(compsci.json[0]); // show json conversion of 1st object to string // logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; // body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; // body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row in compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].name + &quot;&lt;/td&gt;&quot;; // body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].ghID + &quot;&lt;/td&gt;&quot;; // body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + compsci.classroom[row].role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . DN Market Place About Us Page Prototype . NameRole . Mr M | Teacher | Pranavi | Scrum Master | Meena | Backend Developer | Madhumita | Frontend Developer | Shraddha | DevOps Manager | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; DN Marketplace Data Prototype . //const resultCont = document.getElementById(&quot;result&quot;); function item(name,seller,price,condition) { this.name = name; this.seller = seller; this.price = price; this.condition = condition; } // define a JSON conversion &quot;method&quot; associated with Person Item.prototype.toJSON = function() { const obj = {name: this.name, price: this.price, seller: this.seller}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } var data = [ new item(&quot;AP Physics C Barons Prep Book&quot;, &quot;Meena A&quot;, &quot;20&quot;, &quot;Slightly used&quot;), new item(&quot;Calculus Tutoring&quot;, &quot;Bob the Builder&quot;, &quot;100&quot;, &quot;N/A&quot;), ]; function format(item){ // 1 teacher, many student // start Classroom with Teacher //teacher.setRole(&quot;Teacher&quot;); this.item = item; this.classroom = [teacher]; // build json/string format of Classroom this.json = []; this.format.forEach(item =&gt; this.json.push(item.toJSON())); } // //build data table // for (const row of data) { // // tr for each row // const tr = document.createElement(&quot;tr&quot;); // // td for each column // const name = document.createElement(&quot;td&quot;); // const seller = document.createElement(&quot;td&quot;); // const price = document.createElement(&quot;td&quot;); // const condition = document.createElement(&quot;td&quot;); // // data is specific to the API // name.innerHTML = row.name; // seller.innerHTML = row.seller; // price.innerHTML = row.price; // condition.innerHTML = condition.price; // // this build td&#39;s into tr // tr.appendChild(name); // tr.appendChild(seller); // tr.appendChild(price); // tr.appendChild(condition); // // add HTML to container // resultContainer.appendChild(tr); // } console.log(&quot;DN Market Place Item Info Prototype&quot;); function Item(name,seller,price,condition) { this.name = name; this.seller = seller; this.price = price; this.condition = condition; } Item.prototype.toJSON = function() { const obj = {name: this.name, price: this.price, seller: this.seller}; const json = JSON.stringify(obj); // json/string is useful when passing data on internet return json; } var firstItem = new Item(&quot;Scientific Calculator&quot;, &quot;Kebabob&quot;, &quot;10&quot;, &quot;Brand new&quot;); // object type is easy to work with in JavaScript var theItems = [ new Item(&quot;AP Physics C Barons Prep Book&quot;, &quot;Meena A&quot;, &quot;20&quot;, &quot;Slightly used&quot;), new Item(&quot;Calculus Tutoring&quot;, &quot;Bob the Builder&quot;, &quot;100&quot;, &quot;N/A&quot;), ]; function Marketplace(firstItem, theItems){ this.firstItem = firstItem; this.marketplace = [firstItem]; this.theItems = theItems; this.theItems.forEach(theItem =&gt; { this.marketplace.push(theItem); }); this.json = []; this.marketplace.forEach(item =&gt; this.json.push(item.toJSON())); } // make a del norte marketplace dnMarket = new Marketplace(firstItem, theItems); Marketplace.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Seller&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Price&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Condition&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; for (var row in dnMarket.marketplace) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + dnMarket.marketplace[row].name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dnMarket.marketplace[row].seller + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dnMarket.marketplace[row].price + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + dnMarket.marketplace[row].condition + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(dnMarket._toHtml()); . DN Market Place Item Info Prototype . NameSellerPriceCondition . Scientific Calculator | Kebabob | 10 | Brand new | AP Physics C Barons Prep Book | Meena A | 20 | Slightly used | Calculus Tutoring | Bob the Builder | 100 | N/A | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . . . . .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/25/javaScriptHacks.html",
            "relUrl": "/jupyter/2022/09/25/javaScriptHacks.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Fibnoacci Mini Lab Hacks",
            "content": "The Fibonacci algorithm can be coded many ways. This example shows Fibonacci implemented with the Streams interface. . /* * Creator: Nighthawk Coding Society * Mini Lab Name: Fibonacci sequence, featuring a Stream Algorithm * */ import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; /* Objective will require changing to abstract class with one or more abstract methods below */ public class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected void init() { this.name = &quot;Stream&quot;; Stream.iterate(new long[]{0, 1}, f -&gt; new long[]{f[1], f[0] + f[1]}) .limit(this.size) .forEach(f -&gt; this.setData(f[0]) ); } /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Fibo fib = new Fibo(); fib.print(); } } Fibo.main(null); . Init method = Stream fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Objective of Hacks is to produce the Fibonacci sequence in multiple ways. See this runtime. The method provided is Stream, the objective is to produce more familiar methods like ... . For Loop | While Loop | Recursion | . The trick is to produce all these methods without reproducing the same lines of code. Try to store and capture result data from parent class. . Read the comments of the code in this Blog, as the code instructs you on what to abstract. | . Abstraction . Abstraction is hiding certain info and only show what is necessary to the user | An abstract class can&#39;t be used to make object directly, another class needs to inherit the parent class in order to access the abstract class | An abstract method can only be used in an abstract class and the body of the method is given by the child class | . abstract class Fruit { public abstract void fruitColor(); } // This code will not work since Fruit is an abstract class Fruit apple = new Fruit(); . | Fruit apple = new Fruit(); Fruit is abstract; cannot be instantiated . //Apple class inherits the abstract class Fruit class Apple extends Fruit { public void fruitColor() { System.out.println(&quot;I am a red fruit&quot;); } } // This code will work Apple crunchyApple = new Apple(); crunchyApple.fruitColor(); . I am a red fruit . super vs this . Both used to make constructor calls | super() calls Base class constructor (ex: Parent class) | this() calls current class constructor | . Recursion . A function calls itself | . public int add(int myNum) { if (myNum &gt; 0) { return myNum + add(myNum - 1); } else { return 0; } } int result = add(15); // 15 &gt; 0 --&gt; return 15 + add(14) --&gt; return 15 + (14 + add(13)) --&gt; and // so on until return 15 + 14 + 13 + 12 + 11 + 10 + 9 + 8 + 7 + 6 + 5 + 4 + 3 + 2 + 1 + 0 System.out.println(result); . 120 . For Loop Fibonacci . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; // changed to an abstract class Fibo abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Starting program...&quot;); System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { ForLoop forLoop = new ForLoop(); forLoop.print(); } } public class ForLoop extends Fibo { protected void init() { super.name = &quot;For Loop&quot;; System.out.println(&quot;for loop&quot;); int fibNum1 = 0; int fibNum2 = 1; int fibNum; for (int i = 0; i &lt;= super.size; i++) { super.setData(fibNum1); fibNum = fibNum1 + fibNum2; fibNum1 = fibNum2; fibNum2 = fibNum; } } } Fibo.main(null); . for loop Starting program... Init method = For Loop fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . While Loop Fibonacci . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; // changed to an abstract class Fibo abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Starting program...&quot;); System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { WhileLoop WhileLoop = new WhileLoop(); WhileLoop.print(); } } public class WhileLoop extends Fibo { protected void init() { super.name = &quot;While Loop&quot;; System.out.println(&quot;while loop&quot;); int fibNum1 = 0; int fibNum2 = 1; int fibNum; int i = 0; while (i &lt;= super.size) { super.setData(fibNum1); fibNum = fibNum1 + fibNum2; fibNum1 = fibNum2; fibNum2 = fibNum; i++; } } } Fibo.main(null); . while loop Starting program... Init method = While Loop fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . Recursion Fibonacci . import java.util.ArrayList; import java.util.HashMap; import java.util.stream.Stream; // changed to an abstract class Fibo abstract class Fibo { String name; // name or title of method int size; // nth sequence int hashID; // counter for hashIDs in hash map ArrayList&lt;Long&gt; list; // captures current Fibonacci sequence HashMap&lt;Integer, Object&gt; hash; // captures each sequence leading to final result /* Zero parameter constructor uses Telescoping technique to allow setting of the required value nth @param: none */ public Fibo() { this(20); // telescope to avoid code duplication, using default as 20 } /* Construct the nth fibonacci number @param: nth number, the value is constrained to 92 because of overflow in a long */ public Fibo(int nth) { this.size = nth; this.list = new ArrayList&lt;&gt;(); this.hashID = 0; this.hash = new HashMap&lt;&gt;(); //initialize fibonacci and time mvc this.init(); } /* This Method should be &quot;abstract&quot; Leave method as protected, as it is only authorized to extender of the class Make new class that extends and defines init() Inside references within this class would change from this to super Repeat process using for, while, recursion */ protected abstract void init(); /* Number is added to fibonacci sequence, current state of &quot;list&quot; is added to hash for hashID &quot;num&quot; */ public void setData(long num) { list.add(num); hash.put(this.hashID++, list.clone()); } /* Custom Getter to return last element in fibonacci sequence */ public long getNth() { return list.get(this.size - 1); } /* Custom Getter to return last fibonacci sequence in HashMap */ public Object getNthSeq(int i) { return hash.get(i); } /* Console/Terminal supported print method */ public void print() { System.out.println(&quot;Starting program...&quot;); System.out.println(&quot;Init method = &quot; + this.name); System.out.println(&quot;fibonacci Number &quot; + this.size + &quot; = &quot; + this.getNth()); System.out.println(&quot;fibonacci List = &quot; + this.list); System.out.println(&quot;fibonacci Hashmap = &quot; + this.hash); for (int i=0 ; i&lt;this.size; i++ ) { System.out.println(&quot;fibonacci Sequence &quot; + (i+1) + &quot; = &quot; + this.getNthSeq(i)); } } /* Tester class method. If this becomes abstract you will not be able to test it directly ... Change this method to call &quot;main&quot; class of each of the extended classes */ static public void main(String[] args) { Recursion recursion = new Recursion(); recursion.print(); } } public class Recursion extends Fibo { public int fibIt (int i) { if (i &lt;= 1) { return i; } else { return fibIt(i-1) + fibIt(i-2); } } protected void init() { super.name = &quot;Recursion&quot;; //System.out.println(&quot;Recursion&quot;); for (int i = 0; i &lt;= super.size; i++) { super.setData(fibIt(i)); } } } Fibo.main(null); . Starting program... Init method = Recursion fibonacci Number 20 = 4181 fibonacci List = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765] fibonacci Hashmap = {0=[0], 1=[0, 1], 2=[0, 1, 1], 3=[0, 1, 1, 2], 4=[0, 1, 1, 2, 3], 5=[0, 1, 1, 2, 3, 5], 6=[0, 1, 1, 2, 3, 5, 8], 7=[0, 1, 1, 2, 3, 5, 8, 13], 8=[0, 1, 1, 2, 3, 5, 8, 13, 21], 9=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], 10=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55], 11=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89], 12=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144], 13=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233], 14=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377], 15=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610], 16=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987], 17=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597], 18=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584], 19=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], 20=[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]} fibonacci Sequence 1 = [0] fibonacci Sequence 2 = [0, 1] fibonacci Sequence 3 = [0, 1, 1] fibonacci Sequence 4 = [0, 1, 1, 2] fibonacci Sequence 5 = [0, 1, 1, 2, 3] fibonacci Sequence 6 = [0, 1, 1, 2, 3, 5] fibonacci Sequence 7 = [0, 1, 1, 2, 3, 5, 8] fibonacci Sequence 8 = [0, 1, 1, 2, 3, 5, 8, 13] fibonacci Sequence 9 = [0, 1, 1, 2, 3, 5, 8, 13, 21] fibonacci Sequence 10 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] fibonacci Sequence 11 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55] fibonacci Sequence 12 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89] fibonacci Sequence 13 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144] fibonacci Sequence 14 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233] fibonacci Sequence 15 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377] fibonacci Sequence 16 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610] fibonacci Sequence 17 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987] fibonacci Sequence 18 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597] fibonacci Sequence 19 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584] fibonacci Sequence 20 = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181] . In Blog or code, comment on how this assignment fulfills the following standards from College Board. . Skill 1.B:Determine code that would be used to complete code segments (ie For, While, Recursion) - I worked on accomplishing the same goal of creating a fibonacci sequence but through different methods (for, while, recursion) | Skill 4.C: Determine if two or more code segments yield equivalent results (be sure to Discuss how you know results are the same) Again I worked on get the same output but in different ways to output a fibonacci sequence. I can compare the final sequence output for the three programs and see if they are the same. | . | Skill 5.A: Describe the behavior of a given segment of program code (describe the difference in recursion versus for &amp; while loops, perhaps add timing to determine speed) For loop ForLoop child class extends abstract Fibo class | Loops through the size/how many numbers in the fibonacci sequence (default 20) | starts with adding 0 and 1 and then add the current and previous term | . | While Loop WhileLoop child class extends abstract Fibo class | While the the term is less than the size, start with 0 and 1, and then keep adding the previous term with the current term | . | Recursion Recursion child class extends abstract Fibo class | created a fibIt function that calls itself | . | . | .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/23/fibonacciHacks.html",
            "relUrl": "/jupyter/2022/09/23/fibonacciHacks.html",
            "date": " • Sep 23, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Week 4 Hacks",
            "content": "Week 4 . Issue on Github | . FRQ . During the year we want to learn the four types of FRQs. This week we want to focus on the first type. . FRQ No. 1: Methods and control structures (Focus) | Pick question type 01 from one of the years posted on the former EXAM page. Solve the problem, including missing pieces in a Jupyter Notebook. | Make this a quality blog. My suggestion is Pairs do different FRQs and crossovers do the same, to make grading more valuable. | Browse through multiple questions, find a question that may be somewhat like a PBL interest. . | FRQ NO. 1 2017 | . Iteration Mini-Lab . Arrays, ArrayLists, and 2D arrays . Monkey Rhyme Iterations Mini-Lab and 2D Array notes . Java Spring Backend/Thymeleaf . Using creativity and research, can you come up with something that alters Hello, World application. Perhaps a calculation, like counting words or letters in a phrase. . . Word Count Calculator .java . Word Count Calculator .html . Agile Methodology Hacks . . Team Lesson | Team Scrum Board | Team Roles | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/19/week4Hacks.html",
            "relUrl": "/markdown/2022/09/19/week4Hacks.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "FRQ 2017 1",
            "content": "FRQ 1 Question . 2017 APCSA FRQ . This question involves identifying and processing the digits of a non-negative integer. The declaration of the Digits class is shown below. You will write the constructor and one method for the Digits class. . a) Write the constructor for the Digits class. The constructor initializes and fills digitList with the digits from the non-negative integer num. The elements in digitList must be Integer objects representing single digits, and appear in the same order as the digits in num. Each of the following examples shows the declaration of a Digits object and the contents of digitList as initialized by the constructor. . Digits d1 = new Digits(15704); | digitList: 1, 5, 7, 0, 4 | . b) ) Write the Digits method isStrictlyIncreasing. The method returns true if the elements of digitList appear in strictly increasing order; otherwise, it returns false. A list is considered strictly increasing if each element after the first is greater than (but not equal to) the preceding element. The following table shows the results of several calls to isStrictlyIncreasing . FRQ 1 My Solution . (Outline for the Digits class given, added code - constructor for Digits and isStrictlyIncreasing method) . public class Digits { /** The list of digits from the number used to construct this object. * The digits appear in the list in the same order in which they appear in the original number. */ private ArrayList&lt;Integer&gt; digitList; /** Constructs a Digits object that represents num. * Precondition: num &gt;= 0 */ public Digits(int num) { // create the array list of integers digitList = new ArrayList&lt;Integer&gt; (); // take what is passed into the constructor and convert it to a string String number = String.valueOf(num); // Loop through the string and add each character converted integer into the integer array list for (int i = 0; i &lt; number.length(); i++) { digitList.add(Integer.parseInt(String.valueOf(number.charAt(i)))); } // print out the array list System.out.println(digitList); } /** Returns true if the digits in this Digits object are in strictly increasing order; * false otherwise. */ public boolean isStrictlyIncreasing() { // loop through the entire array list of integers for (int i = 0; i &lt; digitList.size(); i++) { // if the term is not less than (so greater than or equal to) the next term, return false if (digitList.get(i) &gt;= digitList.get(i+1)) { return false; } } // if every number is greater than the next and so the prev if statement is false, return true return true; } } . Testing the code . private ArrayList&lt;Integer&gt; digitList; digitList = new ArrayList&lt;Integer&gt; (); //expect to get an out put of a list of 12345 and true since the numbers are increasing String number = String.valueOf(12345); for (int i = 0; i &lt; number.length(); i++) { digitList.add(Integer.parseInt(String.valueOf(number.charAt(i)))); } System.out.println(digitList); for (int i = 0; i &lt; digitList.size() - 1; i++) { if (digitList.get(i) &gt;= digitList.get(i+1)) { System.out.println(&quot;false&quot;); //note: would be a return statement so would exit out of the loop } } System.out.println(&quot;true&quot;); . [1, 2, 3, 4, 5] true . Scoring Notes . For part A, solution guide didn&#39;t use casting to solve the question. Instead, takes the number passed and performs modulus by 10. So for example if 12345 was passed in, 12345 % 10 is 5, the last integer in the number. Then num was divided by 10 for the next iteration of the loop and was still an integer not a double so 12345 became 1234 for the next iteration. Code below. (5/5 ?) . | Part b was correct (4/4) . | . public Digits(int num) { digitList = new ArrayList&lt;Integer&gt;(); if (num == 0) { digitList.add(new Integer(0)); } while (num &gt; 0) { digitList.add(0, new Integer(num % 10)); num /= 10; } } .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/15/FRQ2017.html",
            "relUrl": "/jupyter/2022/09/15/FRQ2017.html",
            "date": " • Sep 15, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Iteration Mini Lab",
            "content": "/* * Creator: Nighthawk Coding Society * Mini Lab Name: Hello Series,featuring Monkey Jumpers */ /** * Class for Monkeys: a 2D array of Monkeys * As well as method to print the Poem */ class MonkeyLoop { //The area between class definition and the 1st method is where we keep data for object in Java String [][] monkeys; //2D Array: AP CSA Unit 8: 2D array of strings //2D array is like a grid [x][y] // or like a spreadsheet [row][column] /** * Constructor initializes a 2D array of Monkeys */ public MonkeyLoop() { //Storing Data in 2D arrays monkeys = new String[][]{ //2D array above is just a name, &quot;new&quot; makes a container (&quot;object&quot;) //Changed the monkeys //Monkey 1 { &quot;w c(..)o (&quot;, &quot; __(-) __)&quot;, &quot; / (&quot;, &quot; /(_)___)&quot;, &quot; w /|&quot;, &quot; | &quot;, &quot; a a &quot; }, //Monkey 2 { &quot;w c(..)o (&quot;, &quot; __(-) __)&quot;, &quot; / (&quot;, &quot; /(_)___)&quot;, &quot; w /|&quot;, &quot; | &quot;, &quot; b b &quot; }, //Monkey 3 { &quot;w c(..)o (&quot;, &quot; __(-) __)&quot;, &quot; / (&quot;, &quot; /(_)___)&quot;, &quot; w /|&quot;, &quot; | &quot;, &quot; c c &quot; }, //Monkey 4 { &quot;w c(..)o (&quot;, &quot; __(-) __)&quot;, &quot; / (&quot;, &quot; /(_)___)&quot;, &quot; w /|&quot;, &quot; | &quot;, &quot; d d &quot; }, }; } /** * Loop and print monkeys in array * ... repeat until you reach zero ... */ public void printPoem() { //begin the poem System.out.println(); System.out.println(&quot;Monkey Jumpers Poem in Java Loopy&quot;); // monkeys (non-primitive) defined in constructor knows its length int monkeyCount = monkeys.length; for (int i = monkeyCount; i &gt;= 1; i--) //loops through 2D array length backwards { //this print statement shows current count of Monkeys // concatenation (+) of the loop variable and string to form a countdown message System.out.println(i + &quot; little monkeys jumping on the bed...&quot;); //Loop through column then row to print out the monkeys horizontally for (int col = 0; col &lt; 7; col++) { //cycles through &quot;cells&quot; of 2d array /*cycles through columns to print each monkey part by part, will eventually print entire column*/ for (int row = 0; row &lt; monkeyCount; row++) { // prints specific part of the monkey from the column System.out.print(&quot; &quot; + monkeys[row][col] + &quot; &quot;); //this is new line between separate parts //System.out.println(); } //this new line gives separation between stanza of poem System.out.println(); } //Finish the rhyme System.out.println(&quot;One fell off and bumped his head&quot;); System.out.println(&quot;Mama called the doctor and the doctor said&quot;); System.out.println(&quot;No more monkeys jumping on the bed n&quot;); //countdown for poem, decrementing monkeyCount variable by 1 monkeyCount -= 1; } //out of all the loops, prints finishing messages System.out.println(&quot;No more monkeys jumping on the bed&quot;); System.out.println(&quot;0000000000000000000000000000000000&quot;); System.out.println(&quot; THE END &quot;); } /** * A Java Driver/Test method that is the entry point for execution */ public static void main(String[] args) { new MonkeyLoop().printPoem(); //a new monkey list and output in one step } } MonkeyLoop.main(null); . Monkey Jumpers Poem in Java Loopy 4 little monkeys jumping on the bed... w c(..)o ( w c(..)o ( w c(..)o ( w c(..)o ( __(-) __) __(-) __) __(-) __) __(-) __) / ( / ( / ( / ( /(_)___) /(_)___) /(_)___) /(_)___) w /| w /| w /| w /| | | | | a a b b c c d d One fell off and bumped his head Mama called the doctor and the doctor sai No more monkeys jumping on the bed 3 little monkeys jumping on the bed... w c(..)o ( w c(..)o ( w c(..)o ( __(-) __) __(-) __) __(-) __) / ( / ( / ( /(_)___) /(_)___) /(_)___) w /| w /| w /| | | | a a b b c c One fell off and bumped his head Mama called the doctor and the doctor sai No more monkeys jumping on the bed 2 little monkeys jumping on the bed... w c(..)o ( w c(..)o ( __(-) __) __(-) __) / ( / ( /(_)___) /(_)___) w /| w /| | | a a b b One fell off and bumped his head Mama called the doctor and the doctor sai No more monkeys jumping on the bed 1 little monkeys jumping on the bed... w c(..)o ( __(-) __) / ( /(_)___) w /| | a a One fell off and bumped his head Mama called the doctor and the doctor sai No more monkeys jumping on the bed No more monkeys jumping on the bed 0000000000000000000000000000000000 THE END . Is this program in more of an Imperative Programming Style or OOP style? Explain. . This program is more of an imperative programming style since here each monkey is not an object but rather elements in a 2D array with the 4 monkeys being the 4 rows and each part of the monkey (head, mouth, etc) being columns. Each monkey does not have methods/attributes. . Build an where the monkey is an object versus two-dimensional array. . public class monkey { String[] body; String name; int age; } monkey curiousGeorge = new monkey(); curiousGeorge.body = new String[]{ &quot;w c(..)o (&quot;, &quot; __(-) __)&quot;, &quot; / (&quot;, &quot; /(_)___)&quot;, &quot; w /|&quot;, &quot; | &quot;, &quot; a a &quot; }; curiousGeorge.name = &quot;Curious George&quot;; curiousGeorge.age = 4; System.out.println(&quot;The first monkey&#39;s name is &quot; + curiousGeorge.name); System.out.println(&quot;The monkey is &quot; + String.valueOf(curiousGeorge.age) + &quot; years old!&quot;); . The first monkey&#39;s name is Curious George The monkey is 4 years old! . 2D Arrays . Study loops and zero based counting . - Study two-dimensional (2D) array references - Explain different way you can access a 2D array . To access an element from the 2D array, use the syntax arrayName[row][column] | For example, to print out the number 4 from the 2D array, you would use System.out.println(numbers[1][1]) | Note:index starts from 0 so the first row (in this case odd numbers) would have an index of 0 and the second row (even numbers) would have an index of 1 and same for columns. | . You can also loop through a 2D array to see every element | . //2D array of odd and even integers //loop throw every row in the array for (int row = 0; row &lt; numbers.length; row++) { //loop through every column in each row for(int column = 0; column &lt; numbers[row].length; column++) { // will print out every element in the array in order System.out.println(numbers[row][column]); } } // can also change the values numbers[0][0] = 100; System.out.println(&quot; nModified array&quot;); for (int row = 0; row &lt; numbers.length; row++) { //loop through every column in each row for(int column = 0; column &lt; numbers[row].length; column++) { // will print out every element in the array in order System.out.println(numbers[row][column]); } } . 1 3 5 7 9 2 4 6 8 10 Modified array 100 3 5 7 9 2 4 6 8 10 .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/13/iterationMiniLab.html",
            "relUrl": "/jupyter/2022/09/13/iterationMiniLab.html",
            "date": " • Sep 13, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Focus/Habits",
            "content": "Focus/Habits . . Psychology and the Good Life (Video) . Make time for gratitude | Make time for social connection | Help others | Be in the present and in the moment | . Gratitude List . Family and friends | Opportunities to learn | Good health | Food | Music | . Goals . Develop CS Skills | Time Management (stay on top of tasks, split todos evenly, etc.) | Get more sleep | Maintain healthy habits | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/10/focusHabits.html",
            "relUrl": "/markdown/2022/09/10/focusHabits.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "CS Experience",
            "content": "CS Experience . . AP CSA . Java (objects, inheritance, etc.) | fastpages (personal blog) | AWS | . Certifications . Python 3 Specialization | PCEP Python Certification from Python Institute of Technology | . MAP Internship . App Dev | Flutter and Dart | Implementing APIs | Main Projects Save scroll position | Implementing Podcast Card | . | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/10/csExp.html",
            "relUrl": "/markdown/2022/09/10/csExp.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Boolean Expressions and If Statements Lesson",
            "content": "If statement . If statements allow you to run a certain piece of code if a specified condition is true. . if (condition) { //run this code if the condition is true } . // Here is an example int num1 = 10; int num2 = 20; if (num1 &lt; num2) { System.out.println(&quot;10 &lt; 20 is true&quot;); } if (num1 &gt; num2) { //this statement will not be printed as the condition is false System.out.println(&quot;10 &gt; 20 is true&quot;); } . 10 &lt; 20 is true . Else statement . Else statements allow you to run a certain piece of code if the specified condition is false. . if (condition) { //run this code if the condition is true } else { // run this code if the condition is false } . // Going back to the previous example int num1 = 10; int num2 = 20; if (num1 &lt; num2) { System.out.println(&quot;10 &lt; 20 is true&quot;); } else { //this statement will not be printed as the condition above was true so this code will never run System.out.println(&quot;10 &lt; 20 is false&quot;); } if (num1 &gt; num2) { System.out.println(&quot;10 &gt; 20 is true&quot;); } else { //this statement will be printed as the condition above was false so this code will run System.out.println(&quot;10 &gt; 20 is false&quot;); } . 10 &lt; 20 is true 10 &gt; 20 is false . Else-if statement . Else-if statements allow you to give backup conditions if the previous condition is false and run different pieces of code depending on if each of the conditions are true or false . if (firstCondition) { //run this code if firstCondition is true } else if (secondCondition) { // run this code if firstCondition is false and secondCondition is true } else { // run this code if firstCondition is false and secondCondition is false } . // Going back to the previous example int num1 = 10; int num2 = 20; if (num1 &gt; num2) { // num1 &gt; num2 is false so this code will not run and will move on to check the next condition System.out.println(&quot;10 &gt; 20 is true&quot;); } else if (num1 &lt; num2) { // this statement will be printed as the condition above was false and this conditions is true System.out.println(&quot;10 &lt; 20 is true&quot;); //any number of else-if statements can be used } else { // this statement will never be printed as the previous condition was true System.out.println(&quot;10 = 20 is true&quot;); } . 10 &lt; 20 is true . switch-case and switch statements . switch-case allows you to run certain blocks of code depending on the expression specified. . switch(expression) { case case1: //code break; case case2: //code break; case case3: //code break; //any number of case statements can be used default: //code } . The expression specified is checked and compared with each case and if the expression matches a case, the code under that case will run. . break statements are often used with switch-case. break exits the loop it is in and move on to the next part of the code. . The code under default will run if none of the cases are true. . Below is an example of taking an if-elseif-else statement with multiple conditions and converting it to a switch-case statement . If-elseif-else . boolean raining = true; boolean cold = false; boolean windy = true; if (cold) { //checks if cold is true but it&#39;s false so moves on to next condition System.out.println(&quot;It is cold&quot;); } else if ( cold &amp;&amp; windy ) { //cold is false and windy is true so the condition is false System.out.println(&quot;It is cold and windy&quot;); } else if ( raining &amp;&amp; cold) { // raining true but cold false so condition is false System.out.println(&quot;It is raining and it is cold&quot;); } else if ( raining &amp;&amp; cold &amp;&amp; windy) { // again, cold is false so the condition is false System.out.println(&quot;It is raining, windy, and cold&quot;); } else if ( windy &amp;&amp; cold) { // again, cold is false so the condition is false System.out.println(&quot;It is windy and it is cold&quot;); } else if ( raining &amp;&amp; windy) { // prints out this statement since both conditions are true System.out.println(&quot;It is windy and it is raining&quot;); } else { // doesn&#39;t get to this part of the code since the previous condition was true System.out.println(&quot;It could be raining, cold, and/or windy&quot;); } . It is windy and it is raining . Switch-case . String weather = &quot;windy and raining&quot;; switch (weather) { case &quot;cold&quot;: // checks if weather has a value of &quot;cold&quot; --&gt; it doesn&#39;t so moves on to check next case System.out.println(&quot;It is cold&quot;); break; case &quot;raining&quot;: System.out.println(&quot;It is raining&quot;); break; case &quot;raining and cold&quot;: System.out.println(&quot;It is raining and it is cold&quot;); break; case &quot;raining and cold and windy&quot;: System.out.println(&quot;It is raining, windy, and cold&quot;); break; case &quot;windy and cold&quot;: System.out.println(&quot;It is windy and it is cold&quot;); break; case &quot;windy and raining&quot;: // this case matches the String weather so this statement is printed out System.out.println(&quot;It is windy and it is raining&quot;); break; default: // doesn&#39;t run this code since a case matched the expression System.out.println(&quot;It could be raining, cold, and/or windy&quot;); } . It is windy and it is raining . De Morgan&#39;s Law . De Morgan&#39;s Law says that &quot;the complement of the product of all terms is equal to the sum of the complement of each term&quot; and shows how the NOT (!) operator can be distributed. For example, !(A &amp;&amp; B) is the same as !A || !B. !(C &gt; D) is the same as C &lt;= D. . boolean cold = false; boolean windy = true; //this first if-else statement checks if both booleans are true and then reverse the result if (!(cold &amp;&amp; windy)) { System.out.println(&quot;It is not both cold and windy&quot;); } else { System.out.println(&quot;The condition is false&quot;); } //this first if-else statement checks if cold is not true or if windy is not true if (!cold || !windy) { System.out.println(&quot;It is not both cold and windy&quot;); } else { System.out.println(&quot;The condition is false&quot;); } // Based on De Morgan&#39;s Law, both if-else statements provide the same output . It is not both cold and windy It is not both cold and windy .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/10/booleanLesson.html",
            "relUrl": "/jupyter/2022/09/10/booleanLesson.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "Backend Development (Week 3)",
            "content": "Backend Development (Week 3) . Issue on Github | . Lesson on ifs and expressions . The hack on the blog provides guidance. . Lesson | . Deployment on AWS . Deployment is required for API and other labs that we are intending to do shortly. Each individual needs to show success in deployment. . meenaa.tk | . (Certbot configuration) . Focus / Habits . As discussed formerly. I would like to see a Blog you are creating that describe your own interest and skills. Purpose of blog, is to build something that could be used for Resume or LinkedIn. For points… Additionally, something for the week that shows your goals, efforts, and vocab. Highlight something that is new to your panning from watching Harvard video . Focus/Habits based on Psychology and the Good Life | CS Experience | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/10/backendDevW3.html",
            "relUrl": "/markdown/2022/09/10/backendDevW3.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Javascript Hacks",
            "content": "| Javascript Hacks | Math Calculator | . . DN Market Place Search . .",
            "url": "https://mann223.github.io/fastpages/frontend/opt1",
            "relUrl": "/frontend/opt1",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "Math Calculator",
            "content": "| Javascript Hacks | Math Calculator | . 0 1 2 3 + 4 5 6 - 7 8 9 Fe A/C 0 . =",
            "url": "https://mann223.github.io/fastpages/frontend/opt2",
            "relUrl": "/frontend/opt2",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Object Hacks",
            "content": "// imports allow you to use code already written by others. It is good to explore and learn libraries. The names around the dots often give you a hint to the originator of the code. import java.util.Scanner; //library for user input import java.lang.Math; //library for random numbers public class Menu { // Instance Variables public final String DEFAULT = &quot; u001B[0m&quot;; // Default Terminal Color public final String[][] COLORS = { // 2D Array of ANSI Terminal Colors {&quot;Default&quot;,DEFAULT}, {&quot;Red&quot;, &quot; u001B[31m&quot;}, {&quot;Green&quot;, &quot; u001B[32m&quot;}, {&quot;Yellow&quot;, &quot; u001B[33m&quot;}, {&quot;Blue&quot;, &quot; u001B[34m&quot;}, {&quot;Purple&quot;, &quot; u001B[35m&quot;}, {&quot;Cyan&quot;, &quot; u001B[36m&quot;}, {&quot;White&quot;, &quot; u001B[37m&quot;}, }; // 2D column location for data public final int NAME = 0; public final int ANSI = 1; // ANSI is the &quot;standard&quot; for terminal codes // Constructor on this Object takes control of menu events and actions public Menu() { Scanner sc = new Scanner(System.in); // using Java Scanner Object this.print(); // print Menu boolean quit = false; while (!quit) { try { // scan for Input int choice = sc.nextInt(); // using method from Java Scanner Object System.out.print(&quot;&quot; + choice + &quot;: &quot;); quit = this.action(choice); // take action } catch (Exception e) { sc.nextLine(); // error: clear buffer System.out.println(e + &quot;: Not a number, try again.&quot;); } } sc.close(); } // Print the menu options to Terminal private void print() { //System.out.println commands below is used to present a Menu to the user. System.out.println(&quot;- n&quot;); System.out.println(&quot;Choose from these choices&quot;); System.out.println(&quot;- n&quot;); System.out.println(&quot;1 - Say Hello&quot;); System.out.println(&quot;2 - Output colors&quot;); System.out.println(&quot;3 - Loading in color&quot;); System.out.println(&quot;4 - Temp Converter (Shraddha)&quot;); System.out.println(&quot;5 - GPA Calculator (Meena)&quot;); System.out.println(&quot;6 - Simple Calculator(Pranavi)&quot;); System.out.println(&quot;7 - Statistics Calculator (Madhumita)&quot;); System.out.println(&quot;8 - Electric Force Calculator&quot;); System.out.println(&quot;0 - Quit&quot;); System.out.println(&quot;- n&quot;); } // Private method to perform action and return true if action is to quit/exit private boolean action(int selection) { boolean quit = false; switch (selection) { // Switch or Switch/Case is Control Flow statement and is used to evaluate the user selection case 0: System.out.print(&quot;Goodbye, World!&quot;); quit = true; break; case 1: System.out.print(&quot;Hello, World!&quot;); break; case 2: for(int i = 0; i &lt; COLORS.length; i++) // loop through COLORS array System.out.print(COLORS[i][ANSI] + COLORS[i][NAME]); break; case 3: System.out.print(&quot;Loading...&quot;); for (int i = 0; i &lt; 20; i++) { // fixed length loading bar int random = (int) (Math.random() * COLORS.length); // random logic try { Thread.sleep(100); // delay for loading } catch (Exception e) { System.out.println(e); } System.out.print(COLORS[random][ANSI] + &quot;#&quot;); } break; case 4: Scanner keyboard = new Scanner(System.in); System.out.println(&quot;Enter in 1 to convert from Fahrenheit to Celsius or 2 to convert from Celsius to Fahrenheit.&quot;); int conversionDeterminer = keyboard.nextInt(); System.out.println(&quot;Please enter a temperature.&quot;); int originalTemp = keyboard.nextInt(); double convertedTemp; if(conversionDeterminer == 1) { convertedTemp = (originalTemp - 32) * (5.0/9); System.out.println(convertedTemp); } else if(conversionDeterminer == 2) { convertedTemp = originalTemp * (9.0/5) + 32; System.out.println(convertedTemp); } else { System.out.println(&quot;Sorry, that input is not valid. Please try running the program again.&quot;); } break; case 5: System.out.println(&quot;GPA Calculator&quot;); System.out.println(&quot;Code by Meena Annamalai&quot;); int count = -1; Scanner input; boolean exitProgram = false; input = new Scanner(System.in); System.out.print(&quot;How many course would you like to enter? &quot;); int numCourses = input.nextInt(); System.out.println(numCourses); input.close(); int[] gradePoints = new int[numCourses]; int[] creditHours = new int[numCourses]; for (int i = 0; i &lt; numCourses; i++) { // get course input = new Scanner(System.in); System.out.print(&quot; nEnter a course, type 0 to exit: &quot;); /** Wrapper class object string is used here since the user enters the course name **/ String course = input.nextLine(); System.out.println(course); input.close(); if (course.equals(&quot;0&quot;)) { exitProgram = true; System.out.println(&quot;Bye!&quot;); break; } //compound assignment operator used here - the result is that the count is increased by 1 each time the loop runs count += 1; // get credits input = new Scanner(System.in); System.out.print(&quot;Enter the number of credits for that course: &quot;); /** primitive data type: an integer is used here since the number of credits will later be used for calculations so a string shouldn&#39;t be used and since the credit number will always be a whole number, an integer data type can be used **/ int credits = input.nextInt(); System.out.println(credits); input.close(); // get letter grade input = new Scanner(System.in); System.out.print(&quot;Enter the letter grade you got: &quot;); /** Wrapper class object string is used here since the user enters the letter grade they got which will then be matched with the corresponding point value with the below switch statement **/ String letterGrade = input.nextLine(); System.out.println(letterGrade); input.close(); int pointValue = 0; //convert letter grade to gpa switch (letterGrade) { case &quot;A&quot;: pointValue = 4; break; case &quot;B&quot;: pointValue = 3; break; case &quot;C&quot;: pointValue = 2; break; case &quot;D&quot;: pointValue = 1; break; case &quot;F&quot;: pointValue = 0; break; } creditHours[count] = credits; gradePoints[count] = pointValue * credits; } int totalGradePoints = 0; for (int i = 0; i &lt; gradePoints.length; i++) { totalGradePoints += gradePoints[i]; } int totalAttemptedCredits = 0; for (int i = 0; i &lt; creditHours.length; i++) { totalAttemptedCredits += creditHours[i]; } //here the Primitive data type boolean is used since I only want the final gpa to be shown if the user doesn&#39;t exit the program if (exitProgram == false) { //here the primitive data type double is used since the the total grade pts divided by the total attempted credits will not always be a whole number //casting is also used for this reason as both variables were originally integers double gpa = (double) totalGradePoints / (double) totalAttemptedCredits; System.out.println(&quot;Your GPA is: &quot; + String.valueOf(gpa)); System.out.println(&quot;Bye! Thank you for using GPA Calculator&quot;); break; } //ScanPrimitives.main(null); break; case 6: System.out.println(&quot;Simple Calculator&quot;); System.out.println(&quot;Code by Pranavi Inukurti&quot;); Scanner Scan = new Scanner(System.in); System.out.println(&quot; n Please enter two numbers&quot;); int xe; int xo; System.out.print(&quot; n First number: &quot;); xe = Scan.nextInt(); System.out.print(&quot; n Second number: &quot;); xo = Scan.nextInt(); System.out.println(&quot; n Select between (*,/,+,-) n Type out the character in a single letter: &quot;); String Operation = Scan.next(); String EO = &quot;You have selected &quot;; switch (Operation) { case &quot;*&quot;: System.out.println(EO + &quot;* n Your Result: &quot;+( xe * xo )); break; case &quot;/&quot;: System.out.println(EO + &quot;/ n Your Result: &quot;+ ( xe / xo )); break; case &quot;+&quot;: System.out.println(EO + &quot;+ n Your Result: &quot;+ ( xe + xo ));break; case &quot;-&quot;: System.out.println(EO + &quot;- n Your Result: &quot;+( xe - xo )); break; default: //Prints error message from console System.out.print(&quot;Unexpected choice, try again.&quot;); //Close Scan.close(); System.out.println(&quot; Closing Application &quot;); } break; case 7: ArrayList&lt;Double&gt; data = new ArrayList&lt;&gt;(); Scanner statisticsInput = new Scanner(System.in); System.out.print(&quot;Enter an numerical datapoint, type a non-numerical value to exit: n&quot;); while(true) { try { double userInput = statisticsInput.nextDouble(); System.out.println(userInput); data.add(userInput); } catch (Exception e) { statisticsInput.close(); break; } } //find mean double total = 0; for (double num : data) { total += num; } double mean = total/data.size(); //find standard deviation double standardDeviation = 0; for (double num : data) { standardDeviation += Math.pow(num - mean, 2); } standardDeviation = Math.sqrt(standardDeviation/(data.size() - 1)); //find min double min = data.get(0); for (double num : data) { if (num &lt; min) { min = num; } } //find max double max = data.get(0); for (double num : data) { if (num &gt; max) { max = num; } } System.out.println(&quot;Mean: &quot; + mean); System.out.println(&quot;Max: &quot; + max); System.out.println(&quot;Min: &quot; + min); System.out.println(&quot;Standard Deviation: &quot; + standardDeviation); break; case 8: System.out.print(&quot;Electric Force Calculator n&quot;); Scanner input1; input1 = new Scanner(System.in); System.out.print(&quot;Enter charge 1: &quot;); int charge1 = input1.nextInt(); System.out.println(charge1); input1.close(); input1 = new Scanner(System.in); System.out.print(&quot;Enter charge 2: &quot;); int charge2 = input1.nextInt(); System.out.println(charge2); input1.close(); input1 = new Scanner(System.in); System.out.print(&quot;Enter r: &quot;); int r = input1.nextInt(); System.out.println(r); input1.close(); int product = charge1 * charge2; int product2 = 900000*product; int result = product2 / (r*r); System.out.println(result); break; } System.out.println(DEFAULT); // make sure to reset color and provide new line return quit; } // Static driver/tester method static public void main(String[] args) { new Menu(); // starting Menu object } } Menu.main(null); . - Choose from these choices - 1 - Say Hello 2 - Output colors 3 - Loading in color 4 - Temp Converter (Shraddha) 5 - GPA Calculator (Meena) 6 - Simple Calculator(Pranavi) 7 - Statistics Calculator (Madhumita) 8 - Electric Force Calculator 0 - Quit - 4: Enter in 1 to convert from Fahrenheit to Celsius or 2 to convert from Celsius to Fahrenheit. Please enter a temperature. 7.222222222222222 5: GPA Calculator Code by Meena Annamalai How many course would you like to enter? 2 Enter a course, type 0 to exit: Bio Enter the number of credits for that course: 4 Enter the letter grade you got: B Enter a course, type 0 to exit: CS Enter the number of credits for that course: 4 Enter the letter grade you got: A Your GPA is: 3.5 Bye! Thank you for using GPA Calculator 6: Simple Calculator Code by Pranavi Inukurti Please enter two numbers First number: Second number: Select between (*,/,+,-) Type out the character in a single letter: You have selected * Your Result: 20 7: Enter an numerical datapoint, type a non-numerical value to exit: 4.0 5.0 6.0 Mean: 5.0 Max: 6.0 Min: 4.0 Standard Deviation: 1.0 8: Electric Force Calculator Enter charge 1: 4 Enter charge 2: 5 Enter r: 2 4500000 0: Goodbye, World! .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/09/03/objectsHacks.html",
            "relUrl": "/jupyter/2022/09/03/objectsHacks.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Innovation - Using Objects (Week 2)",
            "content": "Innovation - Using Objects (Week 2) . Issue on Github | . Code.org Lessons 6-15 (rest of Unit 1) . Individuals show evidence of completing Code.org through Section 15 or beyond. Create a Fastpages blog complete with Screen Grabs that highlight key learnings. Discuss creating and Using Objects Discuss extends . Code.org Notes | . Using Objects Hacks . Action. Build a rapid Java based Administrative UI thinking about Math class and Math operations as a focus. A positive, would be starting to build something that you might be interested in for the Trimester N@tM final. . Make a Console application to visualize data from something like Math, Physics, using Jupyter Notebook and Scanner. - Make a Java Swing App and explore making a menu with a couple of unique interfaces showing different types of Math Calculators. - Idea of your choice | . Built a console with our team Included code from rest of team, incorporated GPA Calculator, added an Electric Force calculator for AP Physics | . | Team Console Repo | Team Console Code | . Frontend Menu . Frontend Menu | . Issues to fix . GUI on WSL Issue with xhosts | . | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/09/03/innovation-usingObjects.html",
            "relUrl": "/markdown/2022/09/03/innovation-usingObjects.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "Innovation - Primitives (Week 1)",
            "content": "Innovation - Primitives (Week 1) . Issue on Github | . Code.org Lessons 1-5 . Seeing that you understand how to use Code.org and that you used it to complement your learning on primitives. Up to Lesson 5 in the OOP assignment. . Code.org Notes | . Primitives Hacks . Create a Jupyter Notebook(s) using IJava kernel and that you could use it to capture key learning on Primitives. . GPA Calculator | . Bash Checks . Create a Jupyter Notebook using Bash and that you could use it to show that you have all the key tools installed. This should also be a Blog for your own personal memory. . Installation Checks | . College Board Learning . Each student captures information in Fastpages thinking … how they are going to capture information that will grow to 10 college board units … how they will recognize something as PBL vs College Board. . College Board Unit Notes | . Fastpages Hacks . Add _pages/notes.md or _pages/vocab.md, insert between tags.md and about.md. Use this area to capture idea and terms throughout the year. . vocab | . Consider using your home page for other subjects other than Computer Science. The searching and tagging features are very powerful and could help recall. . stats unit 1 notes | . Other Week 1 Updates . Update UI (change favicon.ico, etc.) | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/28/innovation-primitives.html",
            "relUrl": "/markdown/2022/08/28/innovation-primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "College Board Unit Notes",
            "content": "Unit 1: Primitive Types . Primitives Example: | GPA Calculator . | Primitive Types Boolean | Numeric Character char | . | Integral Integer byte | short | int | long | . | FLoating-point float | double | . | . | . | . | Wrapper Classes (Non-Primitive) String, Array, etc. | Like an object so has methods | . | Additional W1 Notes: Input Scanner input; | input = new Scanner(System.in); | System.out.print(&quot;Enter an integer: &quot;); | input.close(); | . | Output System.out.println(); | . | . | . Unit 2: Using Objects . Unit 3: Booleans Expressions and if Statements . Unit 4: Iteration . Unit 5: Writing Classes . Unit 6: Array . Unit 7: ArrayList . Unit 8: 2D Array . Unit 9: Inheritance . Unit 10: Recursion .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/28/collegeBoardLearning.html",
            "relUrl": "/markdown/2022/08/28/collegeBoardLearning.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "Code.org Notes Lesson 1- 15",
            "content": "Code.org Week 1 Notes . Lesson 2 Java Lab . Class header and main method | &quot;ClassName&quot; should be replaced with the filename | . public class ClassName { public static void main(String[] args) { } } . Lesson 3 The Neighborhood . Defining an object . ClassName objectName = new ClassName() | Example: Painter myPainter = new Painter(); | . | . | Objects have attributes which are characteristics of an object . | A class is the blueprint that objects are created from. Instantiating an object calls the constrcutor to create an object. | A constructor is code that has the same name as the class and tells the computer how to create a new object | . Lesson 4 Navigating and Printing . Parameter: a variable in the method/constructor signature that defines the type of value to receive when the method or constructor is called in the definition of a function | . | Argument: a value passed to a method/constructor when the method or constructor is called when calling the function | . | . Lesson 5 One-Way Selection Statements . //if statement syntax if (condition) { //do this } . Week 2 Code.org Lessons: 6-15 . Lesson 6 . super is a keyword used to refer to the superclass | constructor signature is the first line of the constructor that includes the public keyword, constructor name, and values to specify when an object is created public class myClass{} | . | inheritance is an OOP principle where a subclass inherits/extends the attributes/behaviors of a superclass | . Lesson 7 . method signature is the name and parameter list public void methodName () { } | . | . Lesson 8 . while loop | while (condition) {} | . Lesson 9 . control structure is a conditional/iteration statement which affects the flow of a program | . Lesson 10 . if (condition) { } | . else { } . ! (&quot;not&quot; operator) | . Lesson 11 . print statements help to debug | . Lesson 12 . pseudocode helps to plan algorithms | . Lesson 13 . An edge case is a bug that occurs at the highest or lowest end of a range of possible values or in extreme situations | . Lesson 14 . Practiced creating subclasses extending a superclass | . Lesson 15 . Check for understanding | .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/28/codeorgNotes-copy.html",
            "relUrl": "/jupyter/2022/08/28/codeorgNotes-copy.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "AP Stats Unit 1 Notes",
            "content": "Categorical Data Displays Bar graph | Pie chart | Two way table | Side-by-side bar graph | Segmented bar graph | Mosaic Plot | . | Quantitative Data Displays Box plot | Dot plot | . | Describe Distribution Center | Shape | Outlier | Context | Spread/variability | . | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/27/statsNotes.html",
            "relUrl": "/markdown/2022/08/27/statsNotes.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Bash Checks",
            "content": "Looking inside Fastpages/Github page project checks - from Bash Tutorial Tech Talk . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/user1 list top level or root of files with project pulled from github Anaconda3-2022.05-Linux-x86_64.sh anaconda3 java Anaconda3-2022.05-Linux-x86_64.sh.1 ijava-1.3.0.zip newAnaconda Anaconda3-2022.05-Linux-x86_64.sh.2 install.py vscode list again with hidden files pulled from github . .landscape Anaconda3-2022.05-Linux-x86_64.sh .. .local Anaconda3-2022.05-Linux-x86_64.sh.1 .bash_history .m2 Anaconda3-2022.05-Linux-x86_64.sh.2 .bash_logout .motd_shown anaconda3 .bashrc .node-gyp ijava-1.3.0.zip .cache .npm install.py .conda .profile java .config .sts4 newAnaconda .gitconfig .sudo_as_admin_successful vscode .ipython .vscode-server .jupyter .wget-hsts list all files in long format total 2027388 drwxr-xr-x 18 user1 user1 4096 Aug 23 10:19 . drwxr-xr-x 3 root root 4096 Aug 17 21:18 .. -rw- 1 user1 user1 3619 Aug 26 20:07 .bash_history -rw-r--r-- 1 user1 user1 220 Aug 17 21:18 .bash_logout -rw-r--r-- 1 user1 user1 4246 Aug 18 20:48 .bashrc drwxr-xr-x 6 user1 user1 4096 Aug 20 17:09 .cache drwxr-xr-x 2 user1 user1 4096 Aug 18 20:48 .conda drwxr-xr-x 3 user1 user1 4096 Aug 23 10:19 .config -rw-r--r-- 1 user1 user1 49 Aug 17 21:28 .gitconfig drwxr-xr-x 3 user1 user1 4096 Aug 19 20:50 .ipython drwxr-xr-x 2 user1 user1 4096 Aug 18 21:18 .jupyter drwxr-xr-x 2 user1 user1 4096 Aug 17 21:19 .landscape drwxr-xr-x 5 user1 user1 4096 Aug 19 20:50 .local drwxr-xr-x 3 user1 user1 4096 Aug 20 17:09 .m2 -rw-r--r-- 1 user1 user1 0 Aug 27 10:20 .motd_shown drwxr-xr-x 3 user1 user1 4096 Aug 18 21:19 .node-gyp drwxr-xr-x 12 user1 user1 4096 Aug 18 21:19 .npm -rw-r--r-- 1 user1 user1 807 Aug 17 21:18 .profile drwxr-xr-x 3 user1 user1 4096 Aug 20 17:10 .sts4 -rw-r--r-- 1 user1 user1 0 Aug 17 21:31 .sudo_as_admin_successful drwxr-xr-x 5 user1 user1 4096 Aug 17 21:28 .vscode-server -rw-r--r-- 1 user1 user1 218 Aug 18 21:21 .wget-hsts -rwxr-xr-x 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 -rw-r--r-- 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.2 drwxr-xr-x 28 user1 user1 4096 Aug 18 21:18 anaconda3 -rw-r--r-- 1 user1 user1 3366077 Dec 6 2021 ijava-1.3.0.zip -rw-r--r-- 1 user1 user1 7471 May 5 2019 install.py drwxr-xr-x 3 user1 user1 4096 May 5 2019 java drwxr-xr-x 2 user1 user1 4096 Aug 18 19:17 newAnaconda drwxr-xr-x 6 user1 user1 4096 Aug 25 10:00 vscode . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts echo &quot;&quot; echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for posts bash: cd: /_posts: No such file or directory /mnt/c/Users/User/vscode/mySite/fastpages/_notebooks total 3116 -rwxrwxrwx 1 user1 user1 3162384 Aug 25 10:30 2020-02-20-test.ipynb -rwxrwxrwx 1 user1 user1 1484 Aug 25 10:30 2022-08-19-javaNB.ipynb -rwxrwxrwx 1 user1 user1 1481 Aug 25 10:30 2022-08-19-python.ipynb -rwxrwxrwx 1 user1 user1 6809 Aug 27 16:06 2022-08-25-primitiveHacks.ipynb -rwxrwxrwx 1 user1 user1 799 Aug 27 11:32 2022-08-27-bashChecks.ipynb -rwxrwxrwx 1 user1 user1 771 Aug 25 10:30 README.md drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 ghtop_images drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 my_icons Look for notebooks bash: cd: /_notebooks: No such file or directory /mnt/c/Users/User/vscode/mySite/fastpages/_notebooks total 3116 -rwxrwxrwx 1 user1 user1 3162384 Aug 25 10:30 2020-02-20-test.ipynb -rwxrwxrwx 1 user1 user1 1484 Aug 25 10:30 2022-08-19-javaNB.ipynb -rwxrwxrwx 1 user1 user1 1481 Aug 25 10:30 2022-08-19-python.ipynb -rwxrwxrwx 1 user1 user1 6809 Aug 27 16:06 2022-08-25-primitiveHacks.ipynb -rwxrwxrwx 1 user1 user1 799 Aug 27 11:32 2022-08-27-bashChecks.ipynb -rwxrwxrwx 1 user1 user1 771 Aug 25 10:30 README.md drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 ghtop_images drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 my_icons . Env . Env(ironement): used to show path to directories | &quot;env&quot;: shows shell setting | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 CONDA_EXE=/home/user1/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=DESKTOP-DS0GMEB PWD=/home/user1 LOGNAME=user1 CONDA_PREFIX=/home/user1/anaconda3 HOME=/home/user1 LANG=C.UTF-8 WSL_INTEROP=/run/WSL/11_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=user1 PYTHONIOENCODING=utf-8 notebooks=/_notebooks CONDA_SHLVL=1 SHLVL=1 PAGER=cat VSCODE_CWD=/mnt/c/Users/User/AppData/Local/Programs/Microsoft VS Code CONDA_PYTHON_EXE=/home/user1/anaconda3/bin/python PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=VSCODE_WSL_EXT_LOCATION/up VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/User/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 PATH=/home/user1/anaconda3/bin:/home/user1/anaconda3/condabin:/home/user1/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/VMware/VMware Workstation/bin:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/User/.conda:/mnt/c/Users/username/Anaconda3:/mnt/c/Users/User/AppData/Local/Programs/Python/Python38-32/Scripts:/mnt/c/Users/User/AppData/Local/Programs/Python/Python38-32:/mnt/c/Users/User/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/User/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/User/Documents/flutter/bin:/mnt/c/Users/User/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/User/AppData/Local/atom/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_IPC_HOOK_CLI=/tmp/vscode-ipc-513e3e18-9649-4849-973e-06eebf91614c.sock _=/usr/bin/env OLDPWD=/home/user1 . Installation Checks . Python and Java Checks . python --version python2 --version python3 --version java --version . Python 3.9.12 Python 2.7.18 Python 3.9.12 openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) . Anaconda Checks . conda --version . conda 4.13.0 . Jupyter and Kernel Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/user1/.local/share/jupyter/kernels/bash java /home/user1/.local/share/jupyter/kernels/java javascript /home/user1/.local/share/jupyter/kernels/javascript python3 /home/user1/.local/share/jupyter/kernels/python3 . Project File Checks . cd ~ echo &quot;files&quot; echo &quot;&quot; ls cd vscode echo &quot;&quot; echo &quot;files in vscode directory&quot; echo &quot;&quot; ls . files Anaconda3-2022.05-Linux-x86_64.sh anaconda3 java Anaconda3-2022.05-Linux-x86_64.sh.1 ijava-1.3.0.zip newAnaconda Anaconda3-2022.05-Linux-x86_64.sh.2 install.py vscode files in vscode directory APCSA APCSP fastpages springJavaProject .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/27/bashChecks.html",
            "relUrl": "/jupyter/2022/08/27/bashChecks.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "Primitives Hacks GPA Calculator",
            "content": "import java.util.Scanner; public class ScanPrimitives { public static void main(String[] args) { System.out.println(&quot;Welcome to GPA Calculator&quot;); System.out.println(&quot;Code by Meena Annamalai&quot;); int count = -1; Scanner input; boolean exitProgram = false; input = new Scanner(System.in); System.out.print(&quot;How many course would you like to enter? &quot;); int numCourses = input.nextInt(); System.out.println(numCourses); input.close(); int[] gradePoints = new int[numCourses]; int[] creditHours = new int[numCourses]; for (int i = 0; i &lt; numCourses; i++) { // get course input = new Scanner(System.in); System.out.print(&quot; nEnter a course, type 0 to exit: &quot;); /** Wrapper class object string is used here since the user enters the course name **/ String course = input.nextLine(); System.out.println(course); input.close(); if (course.equals(&quot;0&quot;)) { exitProgram = true; System.out.println(&quot;Bye!&quot;); break; } //compound assignment operator used here - the result is that the count is increased by 1 each time the loop runs count += 1; // get credits input = new Scanner(System.in); System.out.print(&quot;Enter the number of credits for that course: &quot;); /** primitive data type: an integer is used here since the number of credits will later be used for calculations so a string shouldn&#39;t be used and since the credit number will always be a whole number, an integer data type can be used **/ int credits = input.nextInt(); System.out.println(credits); input.close(); // get letter grade input = new Scanner(System.in); System.out.print(&quot;Enter the letter grade you got: &quot;); /** Wrapper class object string is used here since the user enters the letter grade they got which will then be matched with the corresponding point value with the below switch statement **/ String letterGrade = input.nextLine(); System.out.println(letterGrade); input.close(); int pointValue = 0; //convert letter grade to gpa switch (letterGrade) { case &quot;A&quot;: pointValue = 4; break; case &quot;B&quot;: pointValue = 3; break; case &quot;C&quot;: pointValue = 2; break; case &quot;D&quot;: pointValue = 1; break; case &quot;F&quot;: pointValue = 0; break; } creditHours[count] = credits; gradePoints[count] = pointValue * credits; } int totalGradePoints = 0; for (int i = 0; i &lt; gradePoints.length; i++) { totalGradePoints += gradePoints[i]; } int totalAttemptedCredits = 0; for (int i = 0; i &lt; creditHours.length; i++) { totalAttemptedCredits += creditHours[i]; } //here the Primitive data type boolean is used since I only want the final gpa to be shown if the user doesn&#39;t exit the program if (exitProgram == false) { //here the primitive data type double is used since the the total grade pts divided by the total attempted credits will not always be a whole number //casting is also used for this reason as both variables were originally integers double gpa = (double) totalGradePoints / (double) totalAttemptedCredits; System.out.println(&quot;Your GPA is: &quot; + String.valueOf(gpa)); System.out.println(&quot;Bye! Thank you for using GPA Calculator&quot;); } } } ScanPrimitives.main(null); . Welcome to GPA Calculator Code by Meena Annamalai How many course would you like to enter? 3 Enter a course, type 0 to exit: CS Enter the number of credits for that course: 4 Enter the letter grade you got: A Enter a course, type 0 to exit: Bio Enter the number of credits for that course: 4 Enter the letter grade you got: B Enter a course, type 0 to exit: English Enter the number of credits for that course: 4 Enter the letter grade you got: C Your GPA is: 3.0 Bye! Thank you for using GPA Calculator .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/25/primitiveHacks.html",
            "relUrl": "/jupyter/2022/08/25/primitiveHacks.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "Meena's Fastpages Python Notebook",
            "content": "Code . Hello World in Python . print(&quot;Hello World!&quot;) print(&quot;Hello&quot;) print(&quot;Code by Meena Annamalai&quot;) . Hello World! Hello Code by Meena Annamalai .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/19/python.html",
            "relUrl": "/jupyter/2022/08/19/python.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "First Markdown Post - Tools Setup Hacks",
            "content": "First Post - Meena . . Intro . Meena Annamalai’s first post for APCSA. Tools and Equipment Hacks. . Part 1: Fastpages . Fastpages: . My site | New post | Python NB | Java NB | Github Insights | . . Use of IDE for Fastpages project . Part 2: Java Project . Commit on Java Project | . . Java project running on personal laptop localhost:8080 . Some Python code . print(&quot;Tools and Equipment Hacks&quot;) .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/19/new-fastpage-post.html",
            "relUrl": "/markdown/2022/08/19/new-fastpage-post.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Meena's Fastpages Java Notebook",
            "content": "Code . Hello World in Java . System.out.println(“Hello”); System.out.println(&quot;Code by Meena Annamalai&quot;); . Hello World! Hello Code by Meena Annamalai .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/19/javaNB.html",
            "relUrl": "/jupyter/2022/08/19/javaNB.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://mann223.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "Frontend",
          "content": "| Javascript Hacks | Math Calculator | . . Meena&#39;s frontend menu. . .",
          "url": "https://mann223.github.io/fastpages/menu/frontend",
          "relUrl": "/menu/frontend",
          "date": ""
      }
      
  

  

  
      ,"page2": {
          "title": "About Me",
          "content": "Meena’s fastpages site. This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://mann223.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "APCSA Vocab",
          "content": "Week 1 . Objects have attributes which are characteristics of an object | A class is the blueprint that objects are created from. Instantiating an object calls the constrcutor to create an object. | A constructor is code that has the same name as the class and tells the computer how to create a new object . | Parameter: a variable in the method/constructor signature that defines the type of value to receive when the method or constructor is called in the definition of a function | . | Argument: a value passed to a method/constructor when the method or constructor is called when calling the function | . | .",
          "url": "https://mann223.github.io/fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://mann223.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}