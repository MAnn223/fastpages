{
  
    
        "post0": {
            "title": "Innovation - Primitives (Week 1)",
            "content": "Innovation - Primitives (Week 1) . Code.org Lessons 1-5 . Seeing that you understand how to use Code.org and that you used it to complement your learning on primitives. Up to Lesson 5 in the OOP assignment. . Code.org Notes | . Primitives Hacks . Create a Jupyter Notebook(s) using IJava kernel and that you could use it to capture key learning on Primitives. . GPA Calculator | . Bash Checks . Create a Jupyter Notebook using Bash and that you could use it to show that you have all the key tools installed. This should also be a Blog for your own personal memory. . Installation Checks | . College Board Learning . Each student captures information in Fastpages thinking … how they are going to capture information that will grow to 10 college board units … how they will recognize something as PBL vs College Board. . College Board Unit Notes | . Fastpages Hacks . Add _pages/notes.md or _pages/vocab.md, insert between tags.md and about.md. Use this area to capture idea and terms throughout the year. . vocab Consider using your home page for other subjects other than Computer Science. The searching and tagging features are very powerful and could help recall. | stats unit 1 notes | . Other Week 1 Updates . Update UI (change favicon.ico, etc.) | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/28/innovation-primitives.html",
            "relUrl": "/markdown/2022/08/28/innovation-primitives.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "College Board Unit Notes",
            "content": "Unit 1: Primitive Types . Primitives Example: | GPA Calculator . | Primitive Types Boolean | Numeric Character char | . | Integral Integer byte | short | int | long | . | FLoating-point float | double | . | . | . | . | Wrapper Classes (Non-Primitive) String, Array, etc. | Like an object so has methods | . | Additional W1 Notes: Input Scanner input; | input = new Scanner(System.in); | System.out.print(&quot;Enter an integer: &quot;); | input.close(); | . | Output System.out.println(); | . | . | . Unit 2: Using Objects . Unit 3: Booleans Expressions and if Statements . Unit 4: Iteration . Unit 5: Writing Classes . Unit 6: Array . Unit 7: ArrayList . Unit 8: 2D Array . Unit 9: Inheritance . Unit 10: Recursion .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/28/collegeBoardLearning.html",
            "relUrl": "/markdown/2022/08/28/collegeBoardLearning.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Code.org Notes Lesson 1-5",
            "content": "Code.org Week 1 Notes . Lesson 2 Java Lab . Class header and main method | &quot;ClassName&quot; should be replaced with the filename | . public class ClassName { public static void main(String[] args) { } } . Lesson 3 The Neighborhood . Defining an object . ClassName objectName = new ClassName() | Example: Painter myPainter = new Painter(); | . | . | Objects have attributes which are characteristics of an object . | A class is the blueprint that objects are created from. Instantiating an object calls the constrcutor to create an object. | A constructor is code that has the same name as the class and tells the computer how to create a new object | . Lesson 4 Navigating and Printing . Parameter: a variable in the method/constructor signature that defines the type of value to receive when the method or constructor is called in the definition of a function | . | Argument: a value passed to a method/constructor when the method or constructor is called when calling the function | . | . Lesson 5 One-Way Selection Statements . //if statement syntax if (condition) { //do this } .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/28/codeorgNotes-copy.html",
            "relUrl": "/jupyter/2022/08/28/codeorgNotes-copy.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "AP Stats Unit 1 Notes",
            "content": "Categorical Data Displays Bar graph | Pie chart | Two way table | Side-by-side bar graph | Segmented bar graph | Mosaic Plot | . | Quantitative Data Displays Box plot | Dot plot | . | Describe Distribution Center | Shape | Outlier | Context | Spread/variability | . | .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/27/statsNotes.html",
            "relUrl": "/markdown/2022/08/27/statsNotes.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Bash Checks",
            "content": "Looking inside Fastpages/Github page project checks - from Bash Tutorial Tech Talk . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /home/user1 list top level or root of files with project pulled from github Anaconda3-2022.05-Linux-x86_64.sh anaconda3 java Anaconda3-2022.05-Linux-x86_64.sh.1 ijava-1.3.0.zip newAnaconda Anaconda3-2022.05-Linux-x86_64.sh.2 install.py vscode list again with hidden files pulled from github . .landscape Anaconda3-2022.05-Linux-x86_64.sh .. .local Anaconda3-2022.05-Linux-x86_64.sh.1 .bash_history .m2 Anaconda3-2022.05-Linux-x86_64.sh.2 .bash_logout .motd_shown anaconda3 .bashrc .node-gyp ijava-1.3.0.zip .cache .npm install.py .conda .profile java .config .sts4 newAnaconda .gitconfig .sudo_as_admin_successful vscode .ipython .vscode-server .jupyter .wget-hsts list all files in long format total 2027388 drwxr-xr-x 18 user1 user1 4096 Aug 23 10:19 . drwxr-xr-x 3 root root 4096 Aug 17 21:18 .. -rw- 1 user1 user1 3619 Aug 26 20:07 .bash_history -rw-r--r-- 1 user1 user1 220 Aug 17 21:18 .bash_logout -rw-r--r-- 1 user1 user1 4246 Aug 18 20:48 .bashrc drwxr-xr-x 6 user1 user1 4096 Aug 20 17:09 .cache drwxr-xr-x 2 user1 user1 4096 Aug 18 20:48 .conda drwxr-xr-x 3 user1 user1 4096 Aug 23 10:19 .config -rw-r--r-- 1 user1 user1 49 Aug 17 21:28 .gitconfig drwxr-xr-x 3 user1 user1 4096 Aug 19 20:50 .ipython drwxr-xr-x 2 user1 user1 4096 Aug 18 21:18 .jupyter drwxr-xr-x 2 user1 user1 4096 Aug 17 21:19 .landscape drwxr-xr-x 5 user1 user1 4096 Aug 19 20:50 .local drwxr-xr-x 3 user1 user1 4096 Aug 20 17:09 .m2 -rw-r--r-- 1 user1 user1 0 Aug 27 10:20 .motd_shown drwxr-xr-x 3 user1 user1 4096 Aug 18 21:19 .node-gyp drwxr-xr-x 12 user1 user1 4096 Aug 18 21:19 .npm -rw-r--r-- 1 user1 user1 807 Aug 17 21:18 .profile drwxr-xr-x 3 user1 user1 4096 Aug 20 17:10 .sts4 -rw-r--r-- 1 user1 user1 0 Aug 17 21:31 .sudo_as_admin_successful drwxr-xr-x 5 user1 user1 4096 Aug 17 21:28 .vscode-server -rw-r--r-- 1 user1 user1 218 Aug 18 21:21 .wget-hsts -rwxr-xr-x 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh -rw-r--r-- 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.1 -rw-r--r-- 1 user1 user1 690850711 May 10 11:35 Anaconda3-2022.05-Linux-x86_64.sh.2 drwxr-xr-x 28 user1 user1 4096 Aug 18 21:18 anaconda3 -rw-r--r-- 1 user1 user1 3366077 Dec 6 2021 ijava-1.3.0.zip -rw-r--r-- 1 user1 user1 7471 May 5 2019 install.py drwxr-xr-x 3 user1 user1 4096 May 5 2019 java drwxr-xr-x 2 user1 user1 4096 Aug 18 19:17 newAnaconda drwxr-xr-x 6 user1 user1 4096 Aug 25 10:00 vscode . echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts echo &quot;&quot; echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for posts bash: cd: /_posts: No such file or directory /mnt/c/Users/User/vscode/mySite/fastpages/_notebooks total 3116 -rwxrwxrwx 1 user1 user1 3162384 Aug 25 10:30 2020-02-20-test.ipynb -rwxrwxrwx 1 user1 user1 1484 Aug 25 10:30 2022-08-19-javaNB.ipynb -rwxrwxrwx 1 user1 user1 1481 Aug 25 10:30 2022-08-19-python.ipynb -rwxrwxrwx 1 user1 user1 6809 Aug 27 16:06 2022-08-25-primitiveHacks.ipynb -rwxrwxrwx 1 user1 user1 799 Aug 27 11:32 2022-08-27-bashChecks.ipynb -rwxrwxrwx 1 user1 user1 771 Aug 25 10:30 README.md drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 ghtop_images drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 my_icons Look for notebooks bash: cd: /_notebooks: No such file or directory /mnt/c/Users/User/vscode/mySite/fastpages/_notebooks total 3116 -rwxrwxrwx 1 user1 user1 3162384 Aug 25 10:30 2020-02-20-test.ipynb -rwxrwxrwx 1 user1 user1 1484 Aug 25 10:30 2022-08-19-javaNB.ipynb -rwxrwxrwx 1 user1 user1 1481 Aug 25 10:30 2022-08-19-python.ipynb -rwxrwxrwx 1 user1 user1 6809 Aug 27 16:06 2022-08-25-primitiveHacks.ipynb -rwxrwxrwx 1 user1 user1 799 Aug 27 11:32 2022-08-27-bashChecks.ipynb -rwxrwxrwx 1 user1 user1 771 Aug 25 10:30 README.md drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 ghtop_images drwxrwxrwx 1 user1 user1 512 Aug 25 10:30 my_icons . Env . Env(ironement): used to show path to directories | &quot;env&quot;: shows shell setting | . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash PYTHONUNBUFFERED=1 CONDA_EXE=/home/user1/anaconda3/bin/conda _CE_M= APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 WSL_DISTRO_NAME=Ubuntu ELECTRON_RUN_AS_NODE=1 VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess NAME=DESKTOP-DS0GMEB PWD=/home/user1 LOGNAME=user1 CONDA_PREFIX=/home/user1/anaconda3 HOME=/home/user1 LANG=C.UTF-8 WSL_INTEROP=/run/WSL/11_interop LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36: CONDA_PROMPT_MODIFIER=(base) PYDEVD_USE_FRAME_EVAL=NO posts=/_posts LESSCLOSE=/usr/bin/lesspipe %s %s VSCODE_HANDLES_SIGPIPE=true TERM=xterm-256color _CE_CONDA= LESSOPEN=| /usr/bin/lesspipe %s USER=user1 PYTHONIOENCODING=utf-8 notebooks=/_notebooks CONDA_SHLVL=1 SHLVL=1 PAGER=cat VSCODE_CWD=/mnt/c/Users/User/AppData/Local/Programs/Microsoft VS Code CONDA_PYTHON_EXE=/home/user1/anaconda3/bin/python PS1=[PEXP [ ]ECT_PROMPT&gt; CONDA_DEFAULT_ENV=base WSLENV=VSCODE_WSL_EXT_LOCATION/up VSCODE_WSL_EXT_LOCATION=/mnt/c/Users/User/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3 PATH=/home/user1/anaconda3/bin:/home/user1/anaconda3/condabin:/home/user1/.vscode-server/bin/e4503b30fc78200f846c62cf8091b76ff5547662/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/VMware/VMware Workstation/bin:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0:/mnt/c/WINDOWS/System32/OpenSSH:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/User/.conda:/mnt/c/Users/username/Anaconda3:/mnt/c/Users/User/AppData/Local/Programs/Python/Python38-32/Scripts:/mnt/c/Users/User/AppData/Local/Programs/Python/Python38-32:/mnt/c/Users/User/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/User/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/User/Documents/flutter/bin:/mnt/c/Users/User/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/User/AppData/Local/atom/bin VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en&#34;,&#34;availableLanguages&#34;:{}} HOSTTYPE=x86_64 VSCODE_HANDLES_UNCAUGHT_ERRORS=true VSCODE_IPC_HOOK_CLI=/tmp/vscode-ipc-513e3e18-9649-4849-973e-06eebf91614c.sock _=/usr/bin/env OLDPWD=/home/user1 . Installation Checks . Python and Java Checks . python --version python2 --version python3 --version java --version . Python 3.9.12 Python 2.7.18 Python 3.9.12 openjdk 11.0.16 2022-07-19 OpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu120.04) OpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu120.04, mixed mode, sharing) . Anaconda Checks . conda --version . conda 4.13.0 . Jupyter and Kernel Checks . jupyter --version jupyter kernelspec list . Selected Jupyter core packages... IPython : 8.2.0 ipykernel : 6.9.1 ipywidgets : 7.6.5 jupyter_client : 6.1.12 jupyter_core : 4.9.2 jupyter_server : 1.13.5 jupyterlab : 3.3.2 nbclient : 0.5.13 nbconvert : 6.4.4 nbformat : 5.3.0 notebook : 6.4.8 qtconsole : 5.3.0 traitlets : 5.1.1 Available kernels: bash /home/user1/.local/share/jupyter/kernels/bash java /home/user1/.local/share/jupyter/kernels/java javascript /home/user1/.local/share/jupyter/kernels/javascript python3 /home/user1/.local/share/jupyter/kernels/python3 . Project File Checks . cd ~ echo &quot;files&quot; echo &quot;&quot; ls cd vscode echo &quot;&quot; echo &quot;files in vscode directory&quot; echo &quot;&quot; ls . files Anaconda3-2022.05-Linux-x86_64.sh anaconda3 java Anaconda3-2022.05-Linux-x86_64.sh.1 ijava-1.3.0.zip newAnaconda Anaconda3-2022.05-Linux-x86_64.sh.2 install.py vscode files in vscode directory APCSA APCSP fastpages springJavaProject .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/27/bashChecks.html",
            "relUrl": "/jupyter/2022/08/27/bashChecks.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Primitives Hacks GPA Calculator",
            "content": "import java.util.Scanner; public class ScanPrimitives { public static void main(String[] args) { System.out.println(&quot;Welcome to GPA Calculator&quot;); System.out.println(&quot;Code by Meena Annamalai&quot;); int count = -1; Scanner input; boolean exitProgram = false; input = new Scanner(System.in); System.out.print(&quot;How many course would you like to enter? &quot;); int numCourses = input.nextInt(); System.out.println(numCourses); input.close(); int[] gradePoints = new int[numCourses]; int[] creditHours = new int[numCourses]; for (int i = 0; i &lt; numCourses; i++) { // get course input = new Scanner(System.in); System.out.print(&quot; nEnter a course, type 0 to exit: &quot;); /** Wrapper class object string is used here since the user enters the course name **/ String course = input.nextLine(); System.out.println(course); input.close(); if (course.equals(&quot;0&quot;)) { exitProgram = true; System.out.println(&quot;Bye!&quot;); break; } //compound assignment operator used here - the result is that the count is increased by 1 each time the loop runs count += 1; // get credits input = new Scanner(System.in); System.out.print(&quot;Enter the number of credits for that course: &quot;); /** primitive data type: an integer is used here since the number of credits will later be used for calculations so a string shouldn&#39;t be used and since the credit number will always be a whole number, an integer data type can be used **/ int credits = input.nextInt(); System.out.println(credits); input.close(); // get letter grade input = new Scanner(System.in); System.out.print(&quot;Enter the letter grade you got: &quot;); /** Wrapper class object string is used here since the user enters the letter grade they got which will then be matched with the corresponding point value with the below switch statement **/ String letterGrade = input.nextLine(); System.out.println(letterGrade); input.close(); int pointValue = 0; //convert letter grade to gpa switch (letterGrade) { case &quot;A&quot;: pointValue = 4; break; case &quot;B&quot;: pointValue = 3; break; case &quot;C&quot;: pointValue = 2; break; case &quot;D&quot;: pointValue = 1; break; case &quot;F&quot;: pointValue = 0; break; } creditHours[count] = credits; gradePoints[count] = pointValue * credits; } int totalGradePoints = 0; for (int i = 0; i &lt; gradePoints.length; i++) { totalGradePoints += gradePoints[i]; } int totalAttemptedCredits = 0; for (int i = 0; i &lt; creditHours.length; i++) { totalAttemptedCredits += creditHours[i]; } //here the Primitive data type boolean is used since I only want the final gpa to be shown if the user doesn&#39;t exit the program if (exitProgram == false) { //here the primitive data type double is used since the the total grade pts divided by the total attempted credits will not always be a whole number //casting is also used for this reason as both variables were originally integers double gpa = (double) totalGradePoints / (double) totalAttemptedCredits; System.out.println(&quot;Your GPA is: &quot; + String.valueOf(gpa)); System.out.println(&quot;Bye! Thank you for using GPA Calculator&quot;); } } } ScanPrimitives.main(null); . Welcome to GPA Calculator Code by Meena Annamalai How many course would you like to enter? 3 Enter a course, type 0 to exit: CS Enter the number of credits for that course: 4 Enter the letter grade you got: A Enter a course, type 0 to exit: Bio Enter the number of credits for that course: 4 Enter the letter grade you got: B Enter a course, type 0 to exit: English Enter the number of credits for that course: 4 Enter the letter grade you got: C Your GPA is: 3.0 Bye! Thank you for using GPA Calculator .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/25/primitiveHacks.html",
            "relUrl": "/jupyter/2022/08/25/primitiveHacks.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Meena's Fastpages Python Notebook",
            "content": "Code . Hello World in Python . print(&quot;Hello World!&quot;) print(&quot;Hello&quot;) print(&quot;Code by Meena Annamalai&quot;) . Hello World! Hello Code by Meena Annamalai .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/19/python.html",
            "relUrl": "/jupyter/2022/08/19/python.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "First Markdown Post - Tools Setup Hacks",
            "content": "First Post - Meena . . Intro . Meena Annamalai’s first post for APCSA. Tools and Equipment Hacks. . Part 1: Fastpages . Fastpages: . My site | New post | Python NB | Java NB | Github Insights | . . Use of IDE for Fastpages project . Part 2: Java Project . Commit on Java Project | . . Java project running on personal laptop localhost:8080 . Some Python code . print(&quot;Tools and Equipment Hacks&quot;) .",
            "url": "https://mann223.github.io/fastpages/markdown/2022/08/19/new-fastpage-post.html",
            "relUrl": "/markdown/2022/08/19/new-fastpage-post.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Meena's Fastpages Java Notebook",
            "content": "Code . Hello World in Java . System.out.println(“Hello”); System.out.println(&quot;Code by Meena Annamalai&quot;); . Hello World! Hello Code by Meena Annamalai .",
            "url": "https://mann223.github.io/fastpages/jupyter/2022/08/19/javaNB.html",
            "relUrl": "/jupyter/2022/08/19/javaNB.html",
            "date": " • Aug 19, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://mann223.github.io/fastpages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Meena’s fastpages site. This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://mann223.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page7": {
          "title": "APCSA Vocab",
          "content": "APCSA Vocab . Objects have attributes which are characteristics of an object | A class is the blueprint that objects are created from. Instantiating an object calls the constrcutor to create an object. | A constructor is code that has the same name as the class and tells the computer how to create a new object . | Parameter: a variable in the method/constructor signature that defines the type of value to receive when the method or constructor is called in the definition of a function | . | Argument: a value passed to a method/constructor when the method or constructor is called when calling the function | . | .",
          "url": "https://mann223.github.io/fastpages/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page11": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://mann223.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}